{"version":3,"sources":["components/react-svg-pan-zoom/constants.js","components/react-svg-pan-zoom/features/common.js","components/react-svg-pan-zoom/events/viewer-event.js","components/react-svg-pan-zoom/features/pan.js","components/react-svg-pan-zoom/utils/calculateBox.js","components/react-svg-pan-zoom/features/zoom.js","components/react-svg-pan-zoom/utils/mapRange.js","components/react-svg-pan-zoom/features/interactions.js","components/react-svg-pan-zoom/events/viewer-mouse-event.js","components/react-svg-pan-zoom/events/viewer-touch-event.js","components/react-svg-pan-zoom/utils/parseViewBox.js","components/react-svg-pan-zoom/features/interactions-touch.js","components/react-svg-pan-zoom/features/miniature.js","components/react-svg-pan-zoom/ui/cursor-polyfill.js","components/react-svg-pan-zoom/utils/RandomUID.js","components/react-svg-pan-zoom/utils/getDisplayName.js","components/react-svg-pan-zoom/ui/border-gradient.js","components/react-svg-pan-zoom/ui-toolbar/icon-cursor.jsx","components/react-svg-pan-zoom/ui-toolbar/icon-pan.jsx","components/react-svg-pan-zoom/ui-toolbar/icon-zoom-in.jsx","components/react-svg-pan-zoom/ui-toolbar/icon-zoom-out.jsx","components/react-svg-pan-zoom/ui-toolbar/icon-fit.jsx","components/react-svg-pan-zoom/ui-toolbar/toolbar-button.jsx","components/react-svg-pan-zoom/ui-toolbar/toolbar.jsx","components/react-svg-pan-zoom/ui-miniature/icon-arrow.jsx","components/react-svg-pan-zoom/ui-miniature/miniature-toggle-button.jsx","components/react-svg-pan-zoom/ui-miniature/miniature-mask.jsx","components/react-svg-pan-zoom/ui-miniature/miniature.jsx","components/react-svg-pan-zoom/viewer.js","components/react-svg-pan-zoom/events/event-factory.js","components/react-svg-pan-zoom/ui/detect-touch.js","components/diagram/grid.jsx","components/diagram/rulerX.jsx","components/diagram/rulerY.jsx","utils/math.js","constants.js","utils/geometry.js","components/connectors/line.jsx","components/basic-shapes/square.jsx","utils/path.js","utils/svg-renderer.js","components/basic-shapes/circle.jsx","components/basic-shapes/hexagon.jsx","components/basic-shapes/parallelogram.jsx","components/basic-shapes/triangle.jsx","components/basic-shapes/plus.jsx","components/basic-shapes/star.jsx","components/basic-shapes/pentagon.jsx","components/basic-shapes/heptagon.jsx","components/basic-shapes/octagon.jsx","components/basic-shapes/trapezoid.jsx","components/basic-shapes/decagon.jsx","components/basic-shapes/right-triangle.jsx","components/basic-shapes/cylinder.jsx","components/basic-shapes/diamond.jsx","components/basic-shapes/renderer.jsx","components/basic-shapes/constants.js","components/vertices/constants.js","components/vertices/line-vertex.jsx","components/vertices/shape-vertex.jsx","components/vertices/renderer.jsx","scene/constants.js","components/viewer.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["MODE_IDLE","MODE_PANNING","MODE_ZOOMING","TOOL_AUTO","TOOL_NONE","TOOL_PAN","TOOL_ZOOM_IN","TOOL_ZOOM_OUT","POSITION_TOP","POSITION_RIGHT","POSITION_BOTTOM","POSITION_LEFT","ACTION_ZOOM","ACTION_PAN","ALIGN_CENTER","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","ALIGN_COVER","DEFAULT_MODE","getDefaultValue","viewerWidth","viewerHeight","SVGMinX","SVGMinY","SVGWidth","SVGHeight","scaleFactorMin","scaleFactorMax","set","identity","version","mode","focus","pinchPointDistance","prePinchMode","startX","startY","endX","endY","miniatureOpen","lastAction","value","patch","action","Object","assign","freeze","getSVGPoint","viewerX","viewerY","matrix","fromObject","inverseMatrix","inverse","applyToPoint","x","y","decompose","scaleFactor","a","translationX","e","translationY","f","setFocus","setSVGViewBox","resetMode","ViewerEvent","originalEvent","SVGViewer","this","_cacheDecomposedValue","preventDefault","stopPropagation","pan","SVGDeltaX","SVGDeltaY","panLimit","undefined","transform","translate","applyToPoints","x1","y1","x2","y2","moveX","moveY","startPanning","updatePanning","Error","start","end","stopPanning","autoPanIfNeeded","deltaX","deltaY","d","calculateBox","width","height","isZoomLevelGoingOutOfBounds","curScaleFactor","lessThanScaleFactorMin","moreThanScaleFactorMax","limitZoomLevel","scaleLevel","Math","max","min","zoom","SVGPointX","SVGPointY","scale","fitSelection","selectionSVGPointX","selectionSVGPointY","selectionWidth","selectionHeight","scaleX","scaleY","fitToViewer","SVGAlignX","SVGAlignY","scaleMatrix","translateX","translateY","remainderY","round","remainderX","translationMatrix","startZooming","updateZooming","stopZooming","abs","box","SVGPoint","mapRange","sourceStart","sourceEnd","targetStart","targetEnd","getMousePosition","event","ViewerDOM","getBoundingClientRect","left","top","clientX","clientY","onMouseDown","tool","props","coords","nextValue","onMouseMove","forceExit","buttons","preventPanOutside","onMouseUp","onMouseEnterOrLeave","type","ViewerMouseEvent","_cachePoint","mousePosition","point","ViewerTouchEvent","_cachePoints","touchesToPoints","touches","_cacheChangedPoints","changedTouches","points","i","length","touch","rect","push","identifier","parseViewBox","viewBoxString","split","filter","Boolean","map","Number","onTouchEnd","indexOf","detectPinchGesture","hasPinchPointDistance","shouldResetPinchPointDistance","onSingleTouch","isMultiTouch","nextValueFn","touchPosition","getTouchPosition","onMultiTouch","sqrt","pow","previousPointDistance","svgPoint","distanceFactor","cancelable","openMiniature","closeMiniature","userAgent","navigator","toLowerCase","cursor","needPrefix","uid","RandomUID","WrappedComponent","state","_uid","React","Component","displayName","name","getDisplayName","prefixID","direction","gradientID","maskID","id","spreadMethod","offset","stopColor","stopOpacity","style","stroke","fill","mask","IconCursor","IconPan","IconZoomIn","IconZoomOut","IconFit","ToolbarButton","hover","setState","display","margin","toolbarPosition","color","active","activeColor","transition","background","padding","border","outline","onMouseEnter","change","onMouseLeave","onTouchStart","onClick","onTouchCancel","title","children","Toolbar","onChangeValue","onChangeTool","activeToolColor","position","handleChangeTool","isHorizontal","right","bottom","backgroundColor","borderRadius","flexDirection","role","handleFit","defaultProps","IconArrow","open","MiniatureToggleButton","zoomToFit","opacity","Miniature","SVGBackground","miniatureWidth","miniatureHeight","ratio","overflow","centerTranslation","pointerEvents","ReactSVGPanZoom","context","defaultValue","SVGViewBox","viewBox","pointerX","pointerY","autoPanLoop","bind","onWheel","prevProps","getValue","needUpdate","setViewerSize","setZoomLevels","setValue","autoPanIsRunning","requestAnimationFrame","addEventListener","removeEventListener","hasOwnProperty","onZoom","onPan","zoomOnViewerCenter","zoomLevel","setPointOnViewerCenter","getTool","target","onEventHandler","click","dblclick","onDoubleClick","mousemove","mouseup","mousedown","touchstart","touchmove","onTouchMove","touchend","touchcancel","eventType","eventFactory","detectAutoPan","onInterval","detectWheel","scaleFactorOnWheel","panningWithToolAuto","customToolbar","customMiniature","cursorPolyfill","blockChildEvents","touchAction","ref","handleViewerEvent","disableDoubleClickZoomWithToolAuto","modifierKeys","modifierKeysReducer","current","modifierKey","getModifierState","reduce","window","maxTouchPoints","grid","toSVG","Grid","scales","elementSize","unitPixelSize","item","dir","className","patternUnits","strokeWidth","thickAdd","step","thinAdd","RulerX","elementW","iterator","positiveUnitsNumber","rulerStyle","fontFamily","valueE","Array","from","val","firstSegmentChecker","lastSegmentChecker","renderSegment","add","fontSize","fontColor","marker","mouseX","markerColor","RulerY","elementH","ceil","digits","toString","valueF","mouseY","SVGStyle","disableZoomWithToolAuto","toolbarProps","miniatureProps","fAbs","n","EPSILON","pointsDistance","x0","y0","diff_x","diff_y","Line","selected","samePoints","angle","atan2","PI","angleBetweenTwoPointsAndOrigin","pos","transX","textAnchor","fontWeight","userSelect","toFixed","Square","visibility","rx","ry","strokeDasharray","processPathData","data","j","collection","arrayCollection","tokenizer","commands","match","lastIndex","isExponential","exec","substring","parsePathData","ob","char","command","r1","r2","largeArc","sweep","splitArrayCollection","seg","test","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","scalePathData","updatedSegment","getPathString","oldOffset","newOffset","segment","obj","isScale","getNewString","getString","string","cmd","ang","l","pathSegmentCollection","segments","prev","ctrl","cpt2","renderPath","svg","options","setAttribute","Circle","useRef","node","newPath","pathData","bounds","actualSize","_transformPath","_isDirt","newPathString","updatePath","attributes","getNamedItem","getBBox","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","renderer","rest","LINE","SHAPE","LineVertex","id1","id2","cx","cy","r","ShapeVertex","info","types","PropTypes","isRequired","number","bool","MODE_WAITING_DRAWING_LINE","MODE_DRAWING_LINE","MODE_DRAWING_ITEM","MODE_DRAGGING_LINE","MODE_DRAGGING_VERTEX","MODE_DRAGGING_ITEM","extractElementData","tagName","parentNode","prototype","Viewer","forwardRef","rWidth","rHeight","useState","b","c","setVal","setOpacity","mouseCoord","setMouseCoord","sceneZoom","setSceneZoom","rulerMarkerShow","setRulerMarkerShow","sceneMode","setMode","drawingLine","setDrawingLine","lines","setLines","setDrawingItem","items","setItems","itemType","setItemType","snap","setSnap","setSelected","setTool","vertices","setVertices","draggingSupport","setDraggingSupport","rulerSize","rulerUnitPixelSize","sceneWidth","sceneHeight","rulerXElements","rulerYElements","useEffect","keyboardEvent","keyCode","index","findIndex","splice","itemIndex","formatValue","zeroLeftPosition","zeroTopPosition","limitWidth","limitHeight","newE","newF","computedWidth","computedHeight","flexFlow","gridRowGap","gridColumnGap","gridTemplateColumns","gridTemplateRows","gridColumn","gridRow","vertexType","nanoid","diffX","startPointX","diffY","startPointY","newVertex0X","startVertex0X","newVertex0Y","startVertex0Y","newVertex1X","startVertex1X","newVertex1Y","startVertex1Y","lineId","lineVertexPos","vertexId","lineIndex","line","clonedLines","find","itemId","elementData","onChange","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f47f1a34.chunk.js","sourcesContent":["export const MODE_IDLE = 'idle';\nexport const MODE_PANNING = 'panning';\nexport const MODE_ZOOMING = 'zooming';\n\nexport const TOOL_AUTO = 'auto';\nexport const TOOL_NONE = 'none';\nexport const TOOL_PAN = 'pan';\nexport const TOOL_ZOOM_IN = 'zoom-in';\nexport const TOOL_ZOOM_OUT = 'zoom-out';\n\nexport const POSITION_NONE = 'none';\nexport const POSITION_TOP = 'top';\nexport const POSITION_RIGHT = 'right';\nexport const POSITION_BOTTOM = 'bottom';\nexport const POSITION_LEFT = 'left';\n\nexport const ACTION_ZOOM = 'zoom';\nexport const ACTION_PAN = 'pan';\n\nexport const ALIGN_CENTER = 'center';\nexport const ALIGN_LEFT = 'left';\nexport const ALIGN_RIGHT = 'right';\nexport const ALIGN_TOP = 'top';\nexport const ALIGN_BOTTOM = 'bottom';\nexport const ALIGN_COVER = 'cover';\n\nexport const INITIAL_VALUE = {}\n","import {MODE_IDLE} from '../constants';\nimport {applyToPoint, fromObject, identity, inverse, scale, transform, translate} from 'transformation-matrix';\n\nconst VERSION = 3\nexport const DEFAULT_MODE = MODE_IDLE\n\n/**\n * Obtain default value\n * @returns {Object}\n */\nexport function getDefaultValue(viewerWidth, viewerHeight, SVGMinX, SVGMinY, SVGWidth, SVGHeight, scaleFactorMin = null, scaleFactorMax = null) {\n  return set({}, {\n    ...identity(),\n    version: VERSION,\n    mode: DEFAULT_MODE,\n    focus: false,\n    pinchPointDistance: null,\n    prePinchMode: null,\n    viewerWidth,\n    viewerHeight,\n    SVGMinX,\n    SVGMinY,\n    SVGWidth,\n    SVGHeight,\n    scaleFactorMin,\n    scaleFactorMax,\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null,\n    miniatureOpen: true,\n    lastAction: null,\n  });\n}\n\n/**\n * Change value\n * @param value\n * @param patch\n * @param action\n * @returns {Object}\n */\nexport function set(value, patch, action = null) {\n  value = Object.assign({}, value, patch, {lastAction: action});\n  return Object.freeze(value);\n}\n\n/**\n * value valid check\n * @param value\n */\nexport function isValueValid(value) {\n  return value !== null\n    && typeof value === 'object'\n    && value.hasOwnProperty('version')\n    && value.version === VERSION;\n}\n\n/**\n * Export x,y coords relative to SVG\n * @param value\n * @param viewerX\n * @param viewerY\n * @returns {*|{x, y}|{x: number, y: number}}\n */\nexport function getSVGPoint(value, viewerX, viewerY) {\n  let matrix = fromObject(value);\n\n  let inverseMatrix = inverse(matrix);\n  return applyToPoint(inverseMatrix, {x: viewerX, y: viewerY});\n}\n\n/**\n * Decompose matrix from value\n * @param value\n * @returns {{scaleFactor: number, translationX: number, translationY: number}}\n */\nexport function decompose(value) {\n  let matrix = fromObject(value);\n\n  return {\n    scaleFactor: matrix.a,\n    translationX: matrix.e,\n    translationY: matrix.f\n  }\n}\n\n/**\n *\n * @param value\n * @param focus\n * @returns {Object}\n */\nexport function setFocus(value, focus) {\n  return set(value, {focus});\n}\n\n\n/**\n *\n * @param value\n * @param viewerWidth\n * @param viewerHeight\n * @returns {Object}\n */\nexport function setViewerSize(value, viewerWidth, viewerHeight) {\n  return set(value, {viewerWidth, viewerHeight});\n}\n\n/**\n *\n * @param value\n * @param SVGMinX\n * @param SVGMinY\n * @param SVGWidth\n * @param SVGHeight\n * @returns {Object}\n */\nexport function setSVGViewBox(value, SVGMinX, SVGMinY, SVGWidth, SVGHeight) {\n  return set(value, {SVGMinX, SVGMinY, SVGWidth, SVGHeight});\n}\n\n/**\n *\n * @param value\n * @param scaleFactorMin\n * @param scaleFactorMax\n * @returns {Object}\n */\n//TODO rename to setZoomLimits\nexport function setZoomLevels(value, scaleFactorMin, scaleFactorMax) {\n  return set(value, {scaleFactorMin, scaleFactorMax});\n}\n\n/**\n *\n * @param value\n * @param SVGPointX\n * @param SVGPointY\n * @param zoomLevel\n * @returns {Object}\n */\nexport function setPointOnViewerCenter(value, SVGPointX, SVGPointY, zoomLevel) {\n  let {viewerWidth, viewerHeight} = value;\n\n  let matrix = transform(\n    translate(-SVGPointX + viewerWidth / 2, -SVGPointY + viewerHeight / 2),   //4\n    translate(SVGPointX, SVGPointY),                                          //3\n    scale(zoomLevel, zoomLevel),                                              //2\n    translate(-SVGPointX, -SVGPointY)                                         //1\n  );\n\n  return set(value, {\n    mode: MODE_IDLE,\n    ...matrix,\n  });\n}\n\n/**\n *\n * @param value\n * @returns {Object}\n */\nexport function reset(value) {\n  return set(value, {\n    mode: MODE_IDLE,\n    ...identity()\n  });\n}\n\n/**\n *\n * @param value\n * @returns {Object}\n */\nexport function resetMode(value) {\n  return set(value, {\n    mode: DEFAULT_MODE,\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null\n  })\n}\n","import {decompose} from '../features/common'\n\nexport default class ViewerEvent {\n  constructor(originalEvent, value, SVGViewer) {\n    this.originalEvent = originalEvent;\n    this.value = value;\n    this.SVGViewer = SVGViewer;\n  }\n\n  get scaleFactor() {\n    this._cacheDecomposedValue = this._cacheDecomposedValue || decompose(this.value);\n    return this._cacheDecomposedValue.scaleFactor;\n  }\n\n  get translationX() {\n    this._cacheDecomposedValue = this._cacheDecomposedValue || decompose(this.value);\n    return this._cacheDecomposedValue.translationX;\n  }\n\n  get translationY() {\n    this._cacheDecomposedValue = this._cacheDecomposedValue || decompose(this.value);\n    return this._cacheDecomposedValue.translationY;\n  }\n\n  preventDefault(){\n    this.originalEvent.preventDefault();\n  }\n\n  stopPropagation(){\n    this.originalEvent.stopPropagation();\n  }\n}\n","import {ACTION_PAN, MODE_IDLE, MODE_PANNING} from '../constants';\nimport {set, getSVGPoint} from './common';\nimport {fromObject, translate, transform, applyToPoints} from 'transformation-matrix';\n\n/**\n * Atomic pan operation\n * @param value\n * @param SVGDeltaX drag movement\n * @param SVGDeltaY drag movement\n * @param panLimit forces the image to keep at least x pixel inside the viewer\n * @returns {Object}\n */\nexport function pan(value, SVGDeltaX, SVGDeltaY, panLimit = undefined) {\n\n  let matrix = transform(\n    fromObject(value),              //2\n    translate(SVGDeltaX, SVGDeltaY) //1\n  );\n\n  // apply pan limits\n  if (panLimit) {\n    let [{x: x1, y: y1}, {x: x2, y: y2}] = applyToPoints(matrix, [\n      {x: value.SVGMinX + panLimit, y: value.SVGMinY + panLimit},\n      {x: value.SVGMinX + value.SVGWidth - panLimit, y: value.SVGMinY + value.SVGHeight - panLimit}\n    ]);\n\n    //x limit\n    let moveX = 0;\n    if (value.viewerWidth - x1 < 0)\n      moveX = value.viewerWidth - x1;\n    else if (x2 < 0) moveX = -x2;\n\n\n    //y limit\n    let moveY = 0;\n    if (value.viewerHeight - y1 < 0)\n      moveY = value.viewerHeight - y1;\n    else if (y2 < 0) moveY = -y2;\n\n    //apply limits\n    matrix = transform(\n      translate(moveX, moveY),\n      matrix\n    )\n  }\n\n  return set(value, {\n    mode: MODE_IDLE,\n    ...matrix,\n  }, ACTION_PAN);\n}\n\n/**\n * Start pan operation lifecycle\n * @param value\n * @param viewerX\n * @param viewerY\n * @return {ReadonlyArray<unknown>}\n */\nexport function startPanning(value, viewerX, viewerY) {\n  return set(value, {\n    mode: MODE_PANNING,\n    startX: viewerX,\n    startY: viewerY,\n    endX: viewerX,\n    endY: viewerY\n  }, ACTION_PAN);\n}\n\n/**\n * Continue pan operation lifecycle\n * @param value\n * @param viewerX\n * @param viewerY\n * @param panLimit\n * @return {ReadonlyArray<unknown>}\n */\nexport function updatePanning(value, viewerX, viewerY, panLimit) {\n  if (value.mode !== MODE_PANNING) throw new Error('update pan not allowed in this mode ' + value.mode);\n\n  let {endX, endY} = value;\n\n  let start = getSVGPoint(value, endX, endY);\n  let end = getSVGPoint(value, viewerX, viewerY);\n\n  let deltaX = end.x - start.x;\n  let deltaY = end.y - start.y;\n\n  let nextValue = pan(value, deltaX, deltaY, panLimit);\n  return set(nextValue, {\n    mode: MODE_PANNING,\n    endX: viewerX,\n    endY: viewerY,\n  }, ACTION_PAN);\n}\n\n/**\n * Stop pan operation lifecycle\n * @param value\n * @return {ReadonlyArray<unknown>}\n */\nexport function stopPanning(value) {\n  return set(value, {\n      mode: MODE_IDLE,\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null\n    }, ACTION_PAN\n  );\n}\n\n/**\n * when pointer is on viewer edge -> pan image\n * @param value\n * @param viewerX\n * @param viewerY\n * @return {ReadonlyArray<any>}\n */\nexport function autoPanIfNeeded(value, viewerX, viewerY) {\n  let deltaX = 0;\n  let deltaY = 0;\n\n  if (viewerY <= 20) deltaY = 2;\n  if (value.viewerWidth - viewerX <= 20) deltaX = -2;\n  if (value.viewerHeight - viewerY <= 20) deltaY = -2;\n  if (viewerX <= 20) deltaX = 2;\n\n  deltaX = deltaX / value.d;\n  deltaY = deltaY / value.d;\n\n  return (deltaX === 0 && deltaY === 0) ? value : pan(value, deltaX, deltaY);\n}\n","export default function calculateBox(start, end) {\n  if (start.x <= end.x && start.y <= end.y) {\n    return {\n      x: start.x,\n      y: start.y,\n      width: end.x - start.x,\n      height: end.y - start.y\n    };\n  } else if (start.x >= end.x && start.y <= end.y) {\n    return {\n      x: end.x,\n      y: start.y,\n      width: start.x - end.x,\n      height: end.y - start.y\n    };\n  } else if (start.x >= end.x && start.y >= end.y) {\n    return {\n      x: end.x,\n      y: end.y,\n      width: start.x - end.x,\n      height: start.y - end.y\n    };\n  } else if (start.x <= end.x && start.y >= end.y) {\n    return {\n      x: start.x,\n      y: end.y,\n      width: end.x - start.x,\n      height: start.y - end.y\n    };\n  }\n}\n\n","import {fromObject, scale, transform, translate} from 'transformation-matrix';\n\nimport {\n  ACTION_ZOOM, MODE_IDLE, MODE_ZOOMING,\n  ALIGN_CENTER, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_TOP, ALIGN_BOTTOM, ALIGN_COVER\n} from '../constants';\nimport {decompose, getSVGPoint, set} from './common';\nimport calculateBox from '../utils/calculateBox';\n\nexport function isZoomLevelGoingOutOfBounds(value, scaleFactor) {\n  const {scaleFactor: curScaleFactor} = decompose(value)\n  const lessThanScaleFactorMin = value.scaleFactorMin && (curScaleFactor * scaleFactor) < value.scaleFactorMin;\n  const moreThanScaleFactorMax = value.scaleFactorMax && (curScaleFactor * scaleFactor) > value.scaleFactorMax;\n\n  return (lessThanScaleFactorMin && scaleFactor < 1) || (moreThanScaleFactorMax && scaleFactor > 1);\n}\n\nexport function limitZoomLevel(value, matrix) {\n  let scaleLevel = matrix.a;\n\n  if(value.scaleFactorMin != null) {\n    // limit minimum zoom\n    scaleLevel = Math.max(scaleLevel, value.scaleFactorMin);\n  }\n\n  if(value.scaleFactorMax != null) {\n    // limit maximum zoom\n    scaleLevel = Math.min(scaleLevel, value.scaleFactorMax);\n  }\n\n  return set(matrix, {\n    a: scaleLevel,\n    d: scaleLevel\n  });\n}\n\nexport function zoom(value, SVGPointX, SVGPointY, scaleFactor) {\n  if (isZoomLevelGoingOutOfBounds(value, scaleFactor)) {\n      // Do not change translation and scale of value\n      return value;\n  }\n\n  const matrix = transform(\n    fromObject(value),\n    translate(SVGPointX, SVGPointY),\n    scale(scaleFactor, scaleFactor),\n    translate(-SVGPointX, -SVGPointY)\n  );\n\n  return set(value, {\n    mode: MODE_IDLE,\n    ...matrix,\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null\n  }, ACTION_ZOOM);\n}\n\n//ENHANCEMENT: add ability to control alignment\n//ENHANCEMENT: add ability to selectively fit image inside viewer\n//ENHANCEMENT: refactor some logic in order to merge with fitToViewer function\nexport function fitSelection(value, selectionSVGPointX, selectionSVGPointY, selectionWidth, selectionHeight) {\n  let {viewerWidth, viewerHeight} = value;\n\n  let scaleX = viewerWidth / selectionWidth;\n  let scaleY = viewerHeight / selectionHeight;\n\n  let scaleLevel = Math.min(scaleX, scaleY);\n\n  const matrix = transform(\n    scale(scaleLevel, scaleLevel),                      //2\n    translate(-selectionSVGPointX, -selectionSVGPointY) //1\n  );\n\n  if(isZoomLevelGoingOutOfBounds(value, scaleLevel / value.d)) {\n    // Do not allow scale and translation\n    return set(value, {\n      mode: MODE_IDLE,\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null\n    });\n  }\n\n  return set(value, {\n    mode: MODE_IDLE,\n    ...limitZoomLevel(value, matrix),\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null\n  }, ACTION_ZOOM);\n}\n\nexport function fitToViewer(value, SVGAlignX=ALIGN_LEFT, SVGAlignY=ALIGN_TOP) {\n  let {viewerWidth, viewerHeight, SVGMinX, SVGMinY, SVGWidth, SVGHeight} = value;\n\n  let scaleX = viewerWidth / SVGWidth;\n  let scaleY = viewerHeight / SVGHeight;\n  let scaleLevel = Math.min(scaleX, scaleY);\n\n  let scaleMatrix = scale(scaleLevel, scaleLevel);\n\n  let translateX = -SVGMinX * scaleX;\n  let translateY = -SVGMinY * scaleY;\n\n // after fitting, SVG and the viewer will match in width (1) or in height (2) or SVG will cover the container with preserving aspect ratio (0)\n if (scaleX < scaleY) {\n    let remainderY = viewerHeight - scaleX * SVGHeight;\n\n    //(1) match in width, meaning scaled SVGHeight <= viewerHeight\n    switch(SVGAlignY) {\n      case ALIGN_TOP:\n        translateY = -SVGMinY * scaleLevel;\n      break;\n\n      case ALIGN_CENTER:\n        translateY = Math.round(remainderY / 2) - SVGMinY * scaleLevel;\n      break;\n\n      case ALIGN_BOTTOM:\n        translateY = remainderY - SVGMinY * scaleLevel;\n      break;\n\n      case ALIGN_COVER:\n        scaleMatrix = scale(scaleY, scaleY); // (0) we must now match to short edge, in this case - height\n        let remainderX = viewerWidth - scaleY * SVGWidth; // calculate remainder in the other scale\n\n        translateX = SVGMinX + Math.round(remainderX / 2); // center by the long edge\n      break;\n\n      default:\n        //no op\n    }\n  } else {\n    let remainderX = viewerWidth - scaleY * SVGWidth;\n\n    //(2) match in height, meaning scaled SVGWidth <= viewerWidth\n    switch(SVGAlignX) {\n      case ALIGN_LEFT:\n        translateX = -SVGMinX * scaleLevel;\n      break;\n\n      case ALIGN_CENTER:\n        translateX = Math.round(remainderX / 2) - SVGMinX * scaleLevel;\n      break;\n\n      case ALIGN_RIGHT:\n        translateX = remainderX - SVGMinX * scaleLevel;\n      break;\n\n      case ALIGN_COVER:\n        scaleMatrix = scale(scaleX, scaleX); // (0) we must now match to short edge, in this case - width\n        let remainderY = viewerHeight - scaleX * SVGHeight; // calculate remainder in the other scale\n\n        translateY = SVGMinY + Math.round(remainderY / 2); // center by the long edge\n      break;\n\n      default:\n        //no op\n    }\n  }\n\n  const translationMatrix = translate(translateX, translateY);\n\n  const matrix = transform(\n    translationMatrix, //2\n    scaleMatrix        //1\n  );\n\n  if (isZoomLevelGoingOutOfBounds(value, scaleLevel / value.d)) {\n    // Do not allow scale and translation\n    return set(value, {\n      mode: MODE_IDLE,\n      startX: null,\n      startY: null,\n      endX: null,\n      endY: null\n    });\n  }\n\n  return set(value, {\n    mode: MODE_IDLE,\n    ...limitZoomLevel(value, matrix),\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null\n  }, ACTION_ZOOM);\n}\n\nexport function zoomOnViewerCenter(value, scaleFactor) {\n  let {viewerWidth, viewerHeight} = value;\n  let SVGPoint = getSVGPoint(value, viewerWidth / 2, viewerHeight / 2);\n  return zoom(value, SVGPoint.x, SVGPoint.y, scaleFactor);\n}\n\nexport function startZooming(value, viewerX, viewerY) {\n  return set(value, {\n    mode: MODE_ZOOMING,\n    startX: viewerX,\n    startY: viewerY,\n    endX: viewerX,\n    endY: viewerY\n  });\n}\n\nexport function updateZooming(value, viewerX, viewerY) {\n  if (value.mode !== MODE_ZOOMING) throw new Error('update selection not allowed in this mode ' + value.mode);\n\n  return set(value, {\n    endX: viewerX,\n    endY: viewerY\n  });\n}\n\nexport function stopZooming(value, viewerX, viewerY, scaleFactor) {\n  const TOLERATED_DISTANCE = 7 //minimum distance to choose if area selection or drill down on point\n  let {startX, startY} = value;\n\n  let start = getSVGPoint(value, startX, startY);\n  let end = getSVGPoint(value, viewerX, viewerY);\n\n  if (Math.abs(startX - viewerX) > TOLERATED_DISTANCE && Math.abs(startY - viewerY) > TOLERATED_DISTANCE) {\n    let box = calculateBox(start, end);\n    return fitSelection(value, box.x, box.y, box.width, box.height);\n  } else {\n    let SVGPoint = getSVGPoint(value, viewerX, viewerY);\n    return zoom(value, SVGPoint.x, SVGPoint.y, scaleFactor);\n  }\n}\n","/**\n * Convert (re-map) an input value range into a destination range.\n * @param value\n * @param sourceStart\n * @param sourceEnd\n * @param targetStart\n * @param targetEnd\n * @return number\n */\n\nexport default function mapRange(value, sourceStart, sourceEnd, targetStart, targetEnd) {\n  return targetStart + (targetEnd - targetStart) * (value - sourceStart) / (sourceEnd - sourceStart);\n}\n","import {MODE_PANNING, MODE_ZOOMING, TOOL_AUTO, TOOL_NONE, TOOL_PAN, TOOL_ZOOM_IN, TOOL_ZOOM_OUT,} from '../constants';\nimport {getSVGPoint, setFocus} from './common';\nimport {autoPanIfNeeded, startPanning, stopPanning, updatePanning} from './pan';\nimport {startZooming, stopZooming, updateZooming, zoom} from './zoom';\nimport mapRange from '../utils/mapRange';\n\nexport function getMousePosition(event, ViewerDOM) {\n  let {left, top} = ViewerDOM.getBoundingClientRect();\n  let x = event.clientX - Math.round(left);\n  let y = event.clientY - Math.round(top);\n  return {x, y}\n}\n\nexport function onMouseDown(event, ViewerDOM, tool, value, props, coords = null) {\n  const {x, y} = coords || getMousePosition(event, ViewerDOM)\n\n  let nextValue = value;\n\n  switch (tool) {\n    case TOOL_ZOOM_OUT:\n      let SVGPoint = getSVGPoint(value, x, y);\n      nextValue = zoom(value, SVGPoint.x, SVGPoint.y, 1 / props.scaleFactor, props);\n      break;\n\n    case TOOL_ZOOM_IN:\n      nextValue = startZooming(value, x, y);\n      break;\n\n    case TOOL_AUTO:\n    case TOOL_PAN:\n      nextValue = startPanning(value, x, y);\n      break;\n\n    default:\n      return value;\n  }\n\n  event.preventDefault();\n  return nextValue;\n}\n\nexport function onMouseMove(event, ViewerDOM, tool, value, props, coords = null) {\n  const {x, y} = coords || getMousePosition(event, ViewerDOM)\n\n  let forceExit = (event.buttons === 0); //the mouse exited and reentered into svg\n  let nextValue = value;\n\n  switch (tool) {\n    case TOOL_ZOOM_IN:\n      if (value.mode === MODE_ZOOMING)\n        nextValue = forceExit ? stopZooming(value, x, y, props.scaleFactor, props) : updateZooming(value, x, y);\n      break;\n\n    case TOOL_AUTO:\n    case TOOL_PAN:\n      if (value.mode === MODE_PANNING)\n        nextValue = forceExit ? stopPanning(value) : updatePanning(value, x, y, props.preventPanOutside ? 20 : undefined);\n      break;\n\n    default:\n      return value;\n  }\n\n  event.preventDefault();\n  return nextValue;\n}\n\nexport function onMouseUp(event, ViewerDOM, tool, value, props, coords = null) {\n  const {x, y} = coords || getMousePosition(event, ViewerDOM)\n\n  let nextValue = value;\n\n  switch (tool) {\n    case TOOL_ZOOM_OUT:\n      if (value.mode === MODE_ZOOMING)\n        nextValue = stopZooming(value, x, y, 1 / props.scaleFactor, props);\n      break;\n\n    case TOOL_ZOOM_IN:\n      if (value.mode === MODE_ZOOMING)\n        nextValue = stopZooming(value, x, y, props.scaleFactor, props);\n      break;\n\n    case TOOL_AUTO:\n    case TOOL_PAN:\n      if (value.mode === MODE_PANNING)\n        nextValue = stopPanning(value);\n      break;\n\n    default:\n      return value;\n  }\n\n  event.preventDefault();\n  return nextValue;\n}\n\nexport function onDoubleClick(event, ViewerDOM, tool, value, props, coords = null) {\n  const {x, y} = coords || getMousePosition(event, ViewerDOM)\n\n  let nextValue = value;\n\n  if (tool === TOOL_AUTO && !props.disableDoubleClickZoomWithToolAuto) {\n    const {modifierKeys = []} = props;\n    let SVGPoint = getSVGPoint(value, x, y);\n    let modifierKeysReducer = (current, modifierKey) => current || event.getModifierState(modifierKey);\n    let modifierKeyActive = modifierKeys.reduce(modifierKeysReducer, false);\n    let scaleFactor = modifierKeyActive ? 1 / props.scaleFactor : props.scaleFactor;\n    nextValue = zoom(value, SVGPoint.x, SVGPoint.y, scaleFactor, props);\n  }\n\n  event.preventDefault();\n  return nextValue;\n}\n\nexport function onWheel(event, ViewerDOM, tool, value, props, coords = null) {\n  const {x, y} = coords || getMousePosition(event, ViewerDOM)\n\n  if (!props.detectWheel) return value;\n\n  let delta = Math.max(-1, Math.min(1, event.deltaY));\n  let scaleFactor = mapRange(delta, -1, 1, props.scaleFactorOnWheel, 1 / props.scaleFactorOnWheel);\n\n  let SVGPoint = getSVGPoint(value, x, y);\n  let nextValue = zoom(value, SVGPoint.x, SVGPoint.y, scaleFactor, props);\n\n  event.preventDefault();\n  return nextValue;\n}\n\nexport function onMouseEnterOrLeave(event, ViewerDOM, tool, value, props, coords = null) {\n  let nextValue = setFocus(value, event.type === 'mouseenter');\n\n  event.preventDefault();\n  return nextValue;\n}\n\nexport function onInterval(event, ViewerDOM, tool, value, props, coords = null) {\n  let {x, y} = coords;\n\n  if (!([TOOL_NONE, TOOL_AUTO].indexOf(tool) >= 0)) return value;\n  if (!props.detectAutoPan) return value;\n  if (!value.focus) return value;\n\n  return autoPanIfNeeded(value, x, y);\n}\n","import ViewerEvent from './viewer-event';\nimport {getMousePosition} from \"../features/interactions\";\nimport {getSVGPoint} from \"../features/common\";\n\nexport default class ViewerMouseEvent extends ViewerEvent {\n  get point() {\n    if (!this._cachePoint) {\n      const {originalEvent: event, SVGViewer, value} = this;\n      const mousePosition = getMousePosition(event, SVGViewer)\n      this._cachePoint = getSVGPoint(value, mousePosition.x, mousePosition.y);\n    }\n    return this._cachePoint;\n  }\n\n  get x() {\n    return this.point.x;\n  }\n\n  get y() {\n    return this.point.y;\n  }\n}\n","import {getSVGPoint} from '../features/common'\nimport ViewerEvent from './viewer-event';\n\nexport default class ViewerTouchEvent extends ViewerEvent {\n  get points() {\n    if (!this._cachePoints)\n      this._cachePoints = ViewerTouchEvent.touchesToPoints(this.originalEvent.touches, this.SVGViewer, this.value);\n\n    return this._cachePoints;\n  }\n\n  get changedPoints() {\n    if (!this._cacheChangedPoints)\n      this._cacheChangedPoints = ViewerTouchEvent.touchesToPoints(this.originalEvent.changedTouches, this.SVGViewer, this.value);\n\n    return this._cacheChangedPoints;\n  }\n\n  static touchesToPoints(touches, SVGViewer, value) {\n    let points = [];\n    for (let i = 0; i < touches.length; i++) {\n      let touch = touches[i];\n\n      let rect = SVGViewer.getBoundingClientRect();\n      let x = touch.clientX - Math.round(rect.left);\n      let y = touch.clientY - Math.round(rect.top);\n\n      let point = getSVGPoint(value, x, y);\n\n      points.push({...point, identifier: touch.identifier});\n    }\n    return points;\n  }\n}\n","export default function parseViewBox(viewBoxString) {\n  // viewBox specs: https://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  return viewBoxString\n    .split(/[ ,]/) // split optional comma\n    .filter(Boolean) // remove empty strings\n    .map(Number); // cast to Number\n}\n","import {transform, fromObject, translate, scale} from 'transformation-matrix';\nimport {\n  TOOL_PAN, TOOL_AUTO, TOOL_ZOOM_IN, TOOL_ZOOM_OUT,\n  MODE_IDLE, MODE_PANNING, MODE_ZOOMING\n} from '../constants';\nimport {resetMode, getSVGPoint, set} from './common';\nimport {onMouseDown, onMouseMove, onMouseUp} from './interactions';\nimport {isZoomLevelGoingOutOfBounds, limitZoomLevel} from './zoom';\n\nfunction getTouchPosition(touch, ViewerDOM) {\n  let {left, top} = ViewerDOM.getBoundingClientRect();\n  let x = touch.clientX - Math.round(left);\n  let y = touch.clientY - Math.round(top);\n\n  return { x, y };\n}\n\nexport function onTouchStart(event, ViewerDOM, tool, value, props) {\n  if (isMultiTouch(event, props)) {\n    return onMultiTouch(event, ViewerDOM, tool, value, props);\n  }\n\n  if (event.touches.length !== 1) {\n    if ([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0){\n      return resetMode(value);\n    } else if([MODE_IDLE].indexOf(value.mode) >= 0){\n      return value;\n    }\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, value, props, onMouseDown);\n}\n\nexport function onTouchMove(event, ViewerDOM, tool, value, props) {\n  if (isMultiTouch(event, props)) {\n    return onMultiTouch(event, ViewerDOM, tool, value, props);\n  }\n\n  if (!([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0)) {\n    return value;\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, value, props, onMouseMove);\n}\n\nexport function onTouchEnd(event, ViewerDOM, tool, value, props) {\n  if (!([MODE_PANNING, MODE_ZOOMING].indexOf(value.mode) >= 0)) {\n    return value;\n  }\n\n  let nextValue = shouldResetPinchPointDistance(event, value, props) ? set(value, { pinchPointDistance: null }) : value;\n\n  if (event.touches.length > 0) {\n    return nextValue;\n  }\n\n  return onSingleTouch(event, ViewerDOM, tool, nextValue, props, onMouseUp);\n}\n\nexport function onTouchCancel(event, ViewerDOM, tool, value, props) {\n  event.stopPropagation();\n  event.preventDefault();\n\n  return resetMode(value);\n}\n\nfunction hasPinchPointDistance(value) {\n  return typeof value.pinchPointDistance === 'number';\n}\n\nfunction shouldResetPinchPointDistance(event, value, props) {\n  return props.detectPinchGesture && hasPinchPointDistance(value) && event.touches.length < 2;\n}\n\nfunction isMultiTouch(event, props) {\n  return props.detectPinchGesture && event.touches.length > 1;\n}\n\nfunction onSingleTouch(event, ViewerDOM, tool, value, props, nextValueFn) {\n  let nextValue = event.touches.length === 0 ? set(value, { mode: value.prePinchMode ? MODE_IDLE : value.mode, prePinchMode: null }) : value;\n  let touch = event.touches.length > 0 ? event.touches[0] : event.changedTouches[0];\n  let touchPosition = getTouchPosition(touch, ViewerDOM);\n\n  switch (tool) {\n    case TOOL_ZOOM_OUT:\n    case TOOL_ZOOM_IN:\n    case TOOL_AUTO:\n    case TOOL_PAN:\n      event.stopPropagation();\n      event.preventDefault();\n      return nextValueFn(event, ViewerDOM, tool, nextValue, props, touchPosition);\n\n    default:\n      return nextValue;\n  }\n}\n\nfunction onMultiTouch(event, ViewerDOM, tool, value, props) {\n  const {left, top} = ViewerDOM.getBoundingClientRect();\n  const x1 = event.touches[0].clientX - Math.round(left);\n  const y1 = event.touches[0].clientY - Math.round(top);\n  const x2 = event.touches[1].clientX - Math.round(left);\n  const y2 = event.touches[1].clientY - Math.round(top);\n  const pinchPointDistance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  const previousPointDistance = hasPinchPointDistance(value) ? value.pinchPointDistance : pinchPointDistance;\n  const svgPoint = getSVGPoint(value, (x1 + x2) / 2, (y1 + y2) / 2);\n  let distanceFactor = pinchPointDistance/previousPointDistance;\n\n  if (isZoomLevelGoingOutOfBounds(value, distanceFactor)) {\n    // Do not change translation and scale of value\n    return value;\n  }\n\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n\n  let matrix = transform(\n    fromObject(value),\n    translate(svgPoint.x, svgPoint.y),\n    scale(distanceFactor, distanceFactor),\n    translate(-svgPoint.x, -svgPoint.y)\n  );\n\n  return set(value, set({\n    mode: MODE_ZOOMING,\n    ...limitZoomLevel(value, matrix),\n    startX: null,\n    startY: null,\n    endX: null,\n    endY: null,\n    prePinchMode: value.prePinchMode ? value.prePinchMode : value.mode,\n    pinchPointDistance\n  }));\n}\n","import {set} from './common';\n\n\nexport function openMiniature(value) {\n  return set(value, {\n    miniatureOpen: true\n  });\n}\n\nexport function closeMiniature(value) {\n  return set(value, {\n    miniatureOpen: false\n  });\n}\n\n","//specs: https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n\nlet needPrefix = (cursor) => ['zoom-in', 'zoom-out', 'grab', 'grabbing'].indexOf(cursor) > -1;\nlet userAgent = () => navigator.userAgent.toLowerCase();\nlet isFirefox = () => userAgent().indexOf('firefox') > -1;\nlet isWebkit = () => userAgent().indexOf('webkit') > -1;\n\nexport default function (cursor) {\n  if (!needPrefix(cursor)) return cursor;\n  if (isFirefox()) return `-moz-${cursor}`;\n  if (isWebkit()) return `-webkit-${cursor}`;\n}\n\n\n","import React from \"react\";\nimport getDisplayName from \"./getDisplayName\";\n\nlet uid = 1;\nconst nextUID = () => `uid${uid++}`;\n\nexport default function RandomUID(WrappedComponent) {\n  class RandomUID extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {uid: nextUID()}\n    }\n\n    render() {\n      return <WrappedComponent _uid={this.state.uid} {...this.props}/>\n    }\n  }\n\n  RandomUID.displayName = `RandomUID(${getDisplayName(WrappedComponent)})`;\n\n  return RandomUID;\n}\n","//https://facebook.github.io/react/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging\nexport default function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT} from '../constants';\nimport RandomUID from \"../utils/RandomUID\";\n\nconst prefixID = 'react-svg-pan-zoom_border_gradient'\n\nfunction BorderGradient({direction, width, height, _uid}) {\n\n  let transform;\n\n  switch (direction) {\n    case POSITION_TOP:\n      transform = `translate(${width}, 0) rotate(90)`;\n      break;\n\n    case POSITION_RIGHT:\n      transform = `translate(${width}, ${height}) rotate(180)`;\n      break;\n\n    case POSITION_BOTTOM:\n      transform = `translate(0, ${height}) rotate(270)`;\n      break;\n\n    case POSITION_LEFT:\n    default:\n      transform = \" \";\n      break;\n  }\n\n  let gradientID = `${prefixID}_gradient_${_uid}`\n  let maskID = `${prefixID}_mask_${_uid}`\n\n  return (\n    <g>\n      <defs>\n        <linearGradient id={gradientID} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\" spreadMethod=\"pad\">\n          <stop offset=\"0%\" stopColor=\"#fff\" stopOpacity=\"0.8\"/>\n          <stop offset=\"100%\" stopColor=\"#000\" stopOpacity=\"0.5\"/>\n        </linearGradient>\n\n        <mask id={maskID} x=\"0\" y=\"0\" width=\"20\" height={Math.max(width, height)}>\n          <rect x=\"0\" y=\"0\" width=\"20\" height={Math.max(width, height)}\n                style={{stroke: \"none\", fill: `url(#${gradientID})`}}/>\n        </mask>\n      </defs>\n\n      <rect x=\"0\" y=\"0\" width=\"20\" height={Math.max(width, height)}\n            style={{stroke: \"none\", fill: \"#000\", mask: `url(#${maskID})`}} transform={transform}/>\n    </g>\n  );\n}\n\nBorderGradient.propTypes = {\n  direction: PropTypes.oneOf([POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT]).isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\n\nexport default RandomUID(BorderGradient)\n","import React from 'react';\n\n//credits https://materialdesignicons.com/icon/cursor-default-outline\n\nexport default function IconCursor() {\n  return (\n    <svg width={24} height={24} stroke=\"currentColor\">\n      <path\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"/>\n    </svg>\n  );\n}\n","import React from 'react';\n\n//https://materialdesignicons.com/icon/cursor-move\n\nexport default function IconPan() {\n  return (\n    <svg width={24} height={24} stroke=\"currentColor\">\n      <path\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"/>\n    </svg>\n  );\n}\n","import React from 'react';\n\n//https://material.io/icons/#ic_zoom_in\n\nexport default function IconZoomIn() {\n  return (\n    <svg width={24} height={24} stroke=\"currentColor\">\n      <g>\n        <path\n          d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n        <path d=\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\"/>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\n//https://material.io/icons/#ic_zoom_out\n\nexport default function IconZoomOut() {\n  return (\n    <svg width={24} height={24} stroke=\"currentColor\">\n      <path\n        d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z\"/>\n    </svg>\n  )\n}\n","import React from 'react';\n\n//credits https://materialdesignicons.com/icon/cursor-default-outline\n\nexport default function IconFit() {\n  return (\n    <svg width={24} height={24} stroke=\"currentColor\">\n      <path\n        d=\"M15 3l2.3 2.3-2.89 2.87 1.42 1.42L18.7 6.7 21 9V3zM3 9l2.3-2.3 2.87 2.89 1.42-1.42L6.7 5.3 9 3H3zm6 12l-2.3-2.3 2.89-2.87-1.42-1.42L5.3 17.3 3 15v6zm12-6l-2.3 2.3-2.87-2.89-1.42 1.42 2.89 2.87L15 21h6z\"/>\n    </svg>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  POSITION_TOP, POSITION_BOTTOM\n} from '../constants';\n\nexport default class ToolbarButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {hover: false};\n  }\n\n  change(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.type) {\n      case 'mouseenter':\n      case 'touchstart':\n        this.setState({hover: true});\n        break;\n      case 'mouseleave':\n      case 'touchend':\n      case 'touchcancel':\n        this.setState({hover: false});\n        break;\n      default:\n        //noop\n    }\n  }\n\n  render() {\n    let style = {\n      display: \"block\",\n      width: \"24px\",\n      height: \"24px\",\n      margin: [POSITION_TOP, POSITION_BOTTOM].indexOf(this.props.toolbarPosition) >= 0 ? \"2px 1px\" : \"1px 2px\",\n      color: this.props.active || this.state.hover ? this.props.activeColor : '#FFF',\n      transition: \"color 200ms ease\",\n      background: \"none\",\n      padding: \"0px\",\n      border: \"0px\",\n      outline: \"0px\",\n      cursor: \"pointer\"\n    };\n\n    return (\n      <button\n        onMouseEnter={e => this.change(e)}\n        onMouseLeave={e => this.change(e)}\n\n        onTouchStart={e => {\n          this.change(e);\n          this.props.onClick(e);\n        }}\n        onTouchEnd={e => this.change(e)}\n        onTouchCancel={e => this.change(e)}\n\n        onClick={this.props.onClick}\n\n        style={style}\n        title={this.props.title}\n        name={this.props.name}\n        type=\"button\"\n      >{this.props.children}</button>\n    )\n  }\n\n}\n\nToolbarButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  toolbarPosition: PropTypes.string.isRequired,\n  activeColor: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TOOL_NONE, TOOL_PAN, TOOL_ZOOM_IN, TOOL_ZOOM_OUT,\n  POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT,\n  ALIGN_CENTER, ALIGN_LEFT, ALIGN_RIGHT, ALIGN_TOP, ALIGN_BOTTOM,\n} from '../constants';\n\nimport {fitToViewer} from '../features/zoom';\nimport IconCursor from './icon-cursor';\nimport IconPan from './icon-pan';\nimport IconZoomIn from './icon-zoom-in';\nimport IconZoomOut from './icon-zoom-out';\nimport IconFit from './icon-fit';\nimport ToolbarButton from './toolbar-button';\n\nexport default function Toolbar({tool, value, onChangeValue, onChangeTool, activeToolColor, position, SVGAlignX, SVGAlignY}) {\n\n  let handleChangeTool = (event, tool) => {\n    onChangeTool(tool);\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  let handleFit = event => {\n    onChangeValue(fitToViewer(value, SVGAlignX, SVGAlignY));\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  let isHorizontal = [POSITION_TOP, POSITION_BOTTOM].indexOf(position) >= 0;\n\n  let style = {\n    //position\n    position: \"absolute\",\n    transform: [POSITION_TOP, POSITION_BOTTOM].indexOf(position) >= 0 ? \"translate(-50%, 0px)\" : \"none\",\n    top: [POSITION_LEFT, POSITION_RIGHT, POSITION_TOP].indexOf(position) >= 0 ? \"5px\" : \"unset\",\n    left: [POSITION_TOP, POSITION_BOTTOM].indexOf(position) >= 0 ? \"50%\" : (POSITION_LEFT === position ? \"5px\" : \"unset\"),\n    right: [POSITION_RIGHT].indexOf(position) >= 0 ? \"5px\" : \"unset\",\n    bottom: [POSITION_BOTTOM].indexOf(position) >= 0 ? \"5px\" : \"unset\",\n\n    //inner styling\n    backgroundColor: \"rgba(19, 20, 22, 0.90)\",\n    borderRadius: \"2px\",\n    display: \"flex\",\n    flexDirection: isHorizontal ? \"row\" : \"column\",\n    padding: isHorizontal ? \"1px 2px\" : \"2px 1px\"\n  };\n\n  return (\n    <div style={style} role=\"toolbar\">\n      <ToolbarButton\n        toolbarPosition={position}\n        active={tool === TOOL_NONE}\n        activeColor={activeToolColor}\n        name=\"unselect-tools\"\n        title=\"Selection\"\n        onClick={ event => handleChangeTool(event, TOOL_NONE) }>\n        <IconCursor/>\n      </ToolbarButton>\n\n      <ToolbarButton\n        toolbarPosition={position}\n        active={tool === TOOL_PAN}\n        activeColor={activeToolColor}\n        name=\"select-tool-pan\"\n        title=\"Pan\"\n        onClick={ event => handleChangeTool(event, TOOL_PAN) }>\n        <IconPan/>\n      </ToolbarButton>\n\n      <ToolbarButton\n        toolbarPosition={position}\n        active={tool === TOOL_ZOOM_IN}\n        activeColor={activeToolColor}\n        name=\"select-tool-zoom-in\"\n        title=\"Zoom in\"\n        onClick={ event => handleChangeTool(event, TOOL_ZOOM_IN) }>\n        <IconZoomIn/>\n      </ToolbarButton>\n\n      <ToolbarButton\n        toolbarPosition={position}\n        active={tool === TOOL_ZOOM_OUT}\n        activeColor={activeToolColor}\n        name=\"select-tool-zoom-out\"\n        title=\"Zoom out\"\n        onClick={ event => handleChangeTool(event, TOOL_ZOOM_OUT) }>\n        <IconZoomOut/>\n      </ToolbarButton>\n\n      <ToolbarButton\n        toolbarPosition={position}\n        active={false}\n        activeColor={activeToolColor}\n        name=\"fit-to-viewer\"\n        title=\"Fit to viewer\"\n        onClick={ event => handleFit(event) }>\n        <IconFit/>\n      </ToolbarButton>\n    </div>\n  )\n}\n\nToolbar.propTypes = {\n  tool: PropTypes.string.isRequired,\n  onChangeTool: PropTypes.func.isRequired,\n  value: PropTypes.object.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n\n  //customizations\n  position: PropTypes.oneOf([POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT]),\n  SVGAlignX: PropTypes.oneOf([ALIGN_CENTER, ALIGN_LEFT, ALIGN_RIGHT]),\n  SVGAlignY: PropTypes.oneOf([ALIGN_CENTER, ALIGN_TOP, ALIGN_BOTTOM]),\n  activeToolColor: PropTypes.string\n};\n\nToolbar.defaultProps = {\n  position: POSITION_RIGHT,\n  SVGAlignX: ALIGN_LEFT,\n  SVGAlignY: ALIGN_TOP,\n  activeToolColor: '#1CA6FC'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {POSITION_RIGHT, POSITION_LEFT} from '../constants';\n\n//credits https://materialdesignicons.com/icon/chevron-up\n\nexport default function IconArrow({open, position}) {\n\n  let transform = 0;\n\n  switch (position){\n    case POSITION_LEFT:\n      transform = open ? \"rotate(225, 12, 13)\" : \"rotate(45, 12, 13)\";\n      break;\n\n    case POSITION_RIGHT:\n      transform = transform = open ? \"rotate(135, 12, 13)\" : \"rotate(-45, 12, 13)\";\n      break;\n\n    default:\n      //no op\n  }\n\n  return (\n    <svg width={24} height={24} stroke=\"currentColor\">\n      <g transform={transform}>\n        <path fill=\"#000000\" d=\"M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z\"/>\n      </g>\n    </svg>\n  );\n}\n\nIconArrow.propTypes = {\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf([POSITION_RIGHT, POSITION_LEFT]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {openMiniature, closeMiniature} from '../features/miniature';\nimport IconArrow from './icon-arrow';\nimport {POSITION_RIGHT, POSITION_LEFT} from '../constants';\n\nexport default function MiniatureToggleButton({value, onChangeValue, position}) {\n  let style = {\n    width: \"24px\",\n    height: \"24px\",\n    display: \"block\",\n    position: \"absolute\",\n    bottom: 0,\n    [position === POSITION_LEFT ? 'left' : 'right']: '0px',\n    background: \"rgba(19, 20, 22, 0.901961)\",\n    border: 0,\n    padding: 0,\n    outline: 0,\n    color: \"#fff\"\n  };\n\n  let action = value.miniatureOpen ? closeMiniature : openMiniature;\n\n  return (\n    <button type=\"button\" style={style} onClick={() => onChangeValue(action(value))}>\n      <IconArrow open={value.miniatureOpen} position={position}/>\n    </button>\n  )\n\n}\n\nMiniatureToggleButton.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n  position: PropTypes.oneOf([POSITION_RIGHT, POSITION_LEFT]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RandomUID from \"../utils/RandomUID\";\n\nconst prefixID = 'react-svg-pan-zoom_miniature'\n\nfunction MiniatureMask({SVGMinX, SVGMinY, SVGWidth, SVGHeight, x1, y1, x2, y2, zoomToFit, _uid}) {\n  const maskID = `${prefixID}_mask_${_uid}`\n\n  return (\n    <g>\n      <defs>\n        <mask id={maskID}>\n          <rect x={SVGMinX} y={SVGMinY} width={SVGWidth} height={SVGHeight} fill=\"#ffffff\"/>\n          <rect x={x1} y={y1} width={x2 - x1} height={y2 - y1}/>\n        </mask>\n      </defs>\n\n      <rect\n        x={SVGMinX}\n        y={SVGMinY}\n        width={SVGWidth}\n        height={SVGHeight}\n        style={{\n          stroke: \"none\",\n          fill: \"#000\",\n          mask: `url(#${maskID})`,\n          opacity: 0.4\n        }}\n      />\n    </g>)\n}\n\nMiniatureMask.propTypes = {\n  SVGWidth: PropTypes.number.isRequired,\n  SVGHeight: PropTypes.number.isRequired,\n  SVGMinX: PropTypes.number.isRequired,\n  SVGMinY: PropTypes.number.isRequired,\n  x1: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  zoomToFit: PropTypes.number.isRequired,\n}\n\nexport default RandomUID(MiniatureMask)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {POSITION_LEFT, POSITION_RIGHT,} from '../constants';\nimport {applyToPoints, inverse} from 'transformation-matrix';\nimport MiniatureToggleButton from './miniature-toggle-button';\nimport MiniatureMask from './miniature-mask';\n\nexport default function Miniature(props) {\n\n  let {value, onChangeValue, children, position, background, SVGBackground, width: miniatureWidth, height: miniatureHeight} = props;\n  let {SVGMinX, SVGMinY, SVGWidth, SVGHeight, viewerWidth, viewerHeight} = value;\n\n  let ratio = SVGHeight / SVGWidth;\n\n  let zoomToFit = ratio >= 1\n    ? miniatureHeight / SVGHeight\n    : miniatureWidth / SVGWidth;\n\n  let [{x: x1, y: y1}, {x: x2, y: y2}] = applyToPoints(inverse(value), [\n    {x: 0, y: 0},\n    {x: viewerWidth, y: viewerHeight}\n  ]);\n\n  let width, height;\n  if (value.miniatureOpen) {\n    width = miniatureWidth;\n    height = miniatureHeight;\n  } else {\n    width = 24;\n    height = 24;\n  }\n\n  let style = {\n    position: \"absolute\",\n    overflow: \"hidden\",\n    outline: \"1px solid rgba(19, 20, 22, 0.90)\",\n    transition: \"width 200ms ease, height 200ms ease, bottom 200ms ease\",\n    width: width + \"px\",\n    height: height + \"px\",\n    bottom: \"6px\",\n    [position === POSITION_LEFT ? 'left' : 'right']: \"6px\",\n    background\n  };\n\n  let centerTranslation = ratio >= 1\n    ? `translate(${(miniatureWidth - (SVGWidth * zoomToFit)) / 2 - SVGMinX * zoomToFit}, ${ - SVGMinY * zoomToFit})`\n    : `translate(${ - SVGMinX * zoomToFit}, ${(miniatureHeight - (SVGHeight * zoomToFit)) / 2 - SVGMinY * zoomToFit})`;\n\n  return (\n    <div role=\"navigation\" style={style}>\n      <svg\n        width={miniatureWidth}\n        height={miniatureHeight}\n        style={{pointerEvents: \"none\"}}>\n        <g transform={centerTranslation}>\n          <g transform={`scale(${zoomToFit}, ${zoomToFit})`}>\n\n            <rect\n              fill={SVGBackground}\n              x={SVGMinX}\n              y={SVGMinY}\n              width={SVGWidth}\n              height={SVGHeight}/>\n\n            {children}\n\n            <MiniatureMask\n              SVGWidth={SVGWidth}\n              SVGHeight={SVGHeight}\n              SVGMinX={SVGMinX}\n              SVGMinY={SVGMinY}\n              x1={x1}\n              y1={y1}\n              x2={x2}\n              y2={y2}\n              zoomToFit={zoomToFit}\n            />\n\n          </g>\n        </g>\n      </svg>\n      <MiniatureToggleButton value={value} onChangeValue={onChangeValue} position={position}/>\n    </div>\n  )\n}\n\nMiniature.propTypes = {\n  value: PropTypes.object.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n  SVGBackground: PropTypes.string.isRequired,\n\n  //customizations\n  position: PropTypes.oneOf([POSITION_RIGHT, POSITION_LEFT]),\n  background: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nMiniature.defaultProps = {\n  position: POSITION_LEFT,\n  background: \"#616264\",\n  width: 100,\n  height: 80,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {toSVG} from 'transformation-matrix';\n//events\nimport eventFactory from './events/event-factory';\n//features\nimport {pan} from './features/pan';\nimport {\n  getDefaultValue,\n  isValueValid,\n  reset,\n  setPointOnViewerCenter,\n  setSVGViewBox,\n  setViewerSize,\n  setZoomLevels\n} from './features/common';\nimport {\n  onDoubleClick,\n  onInterval,\n  onMouseDown,\n  onMouseEnterOrLeave,\n  onMouseMove,\n  onMouseUp,\n  onWheel\n} from './features/interactions';\nimport parseViewBox from './utils/parseViewBox';\nimport {onTouchCancel, onTouchEnd, onTouchMove, onTouchStart} from './features/interactions-touch';\n\nimport {fitSelection, fitToViewer, zoom, zoomOnViewerCenter} from './features/zoom';\nimport {closeMiniature, openMiniature} from './features/miniature';\n//ui\nimport cursorPolyfill from './ui/cursor-polyfill';\nimport BorderGradient from './ui/border-gradient';\nimport Selection from './ui/selection';\nimport Toolbar from './ui-toolbar/toolbar';\nimport detectTouch from './ui/detect-touch';\nimport Miniature from './ui-miniature/miniature'\n\nimport {\n  ACTION_PAN,\n  ACTION_ZOOM,\n  ALIGN_BOTTOM,\n  ALIGN_CENTER,\n  ALIGN_LEFT,\n  ALIGN_RIGHT,\n  ALIGN_TOP,\n  MODE_IDLE,\n  MODE_PANNING,\n  MODE_ZOOMING,\n  POSITION_BOTTOM,\n  POSITION_LEFT,\n  POSITION_NONE,\n  POSITION_RIGHT,\n  POSITION_TOP,\n  TOOL_AUTO,\n  TOOL_NONE,\n  TOOL_PAN,\n  TOOL_ZOOM_IN,\n  TOOL_ZOOM_OUT\n} from './constants';\nimport {printMigrationTipsRelatedToProps} from \"./migration-tips\";\n\nexport default class ReactSVGPanZoom extends React.Component {\n\n  constructor(props, context) {\n    const {width: viewerWidth, height: viewerHeight, scaleFactorMin, scaleFactorMax, children} = props;\n    const {viewBox: SVGViewBox} = children.props;\n    let defaultValue;\n    if (SVGViewBox) {\n      const [SVGMinX, SVGMinY, SVGWidth, SVGHeight] = parseViewBox(SVGViewBox);\n      defaultValue = getDefaultValue(viewerWidth, viewerHeight, SVGMinX, SVGMinY, SVGWidth, SVGHeight, scaleFactorMin, scaleFactorMax)\n    } else {\n      const {width: SVGWidth, height: SVGHeight} = children.props;\n      defaultValue = getDefaultValue(viewerWidth, viewerHeight, 0, 0, SVGWidth, SVGHeight, scaleFactorMin, scaleFactorMax)\n    }\n\n    super(props, context);\n    this.ViewerDOM = null;\n    this.state = {\n      pointerX: null,\n      pointerY: null,\n      defaultValue\n    }\n    this.autoPanLoop = this.autoPanLoop.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      printMigrationTipsRelatedToProps(props)\n    }\n  }\n\n  /** React hooks **/\n  componentDidUpdate(prevProps) {\n    const value = this.getValue();\n    const props = this.props\n\n    let nextValue = value;\n    let needUpdate = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      printMigrationTipsRelatedToProps(props)\n    }\n\n    // This block checks the size of the SVG\n    const {viewBox: SVGViewBox} = props.children.props;\n    if (SVGViewBox) {\n      // if the viewBox prop is specified\n      const [x, y, width, height] = parseViewBox(SVGViewBox);\n\n      if(value.SVGMinX !== x || value.SVGMinY !== y || value.SVGWidth !== width || value.SVGHeight !== height) {\n        nextValue = setSVGViewBox(nextValue, x, y, width, height);\n        needUpdate = true;\n      }\n    } else {\n      // if the width and height props are specified\n      const {width: SVGWidth, height: SVGHeight} = props.children.props;\n      if (value.SVGWidth !== SVGWidth || value.SVGHeight !== SVGHeight) {\n        nextValue = setSVGViewBox(nextValue, 0, 0, SVGWidth, SVGHeight);\n        needUpdate = true;\n      }\n    }\n\n    // This block checks the size of the viewer\n    if (\n      prevProps.width !== props.width ||\n      prevProps.height !== props.height\n    ) {\n      nextValue = setViewerSize(nextValue, props.width, props.height);\n      needUpdate = true;\n    }\n\n    // This blocks checks the scale factors\n    if (\n      prevProps.scaleFactorMin !== props.scaleFactorMin ||\n      prevProps.scaleFactorMax !== props.scaleFactorMax\n    ) {\n      nextValue = setZoomLevels(nextValue, props.scaleFactorMin, props.scaleFactorMax);\n      needUpdate = true;\n    }\n\n    if (needUpdate) {\n      this.setValue(nextValue);\n    }\n  }\n\n  componentDidMount() {\n    this.autoPanIsRunning = true;\n    requestAnimationFrame(this.autoPanLoop);\n    this.ViewerDOM.addEventListener('wheel', this.onWheel, false);\n  }\n\n  componentWillUnmount() {\n    this.autoPanIsRunning = false;\n    this.ViewerDOM.removeEventListener('wheel', this.onWheel);\n  }\n\n  /** ReactSVGPanZoom handlers **/\n  getValue() {\n    if (isValueValid(this.props.value)) return this.props.value\n    return this.state.defaultValue\n  }\n\n  getTool() {\n    if (this.props.tool) return this.props.tool\n    return TOOL_NONE\n  }\n\n  setValue(nextValue) {\n    let {onChangeValue, onZoom, onPan} = this.props;\n\n    if (onChangeValue) onChangeValue(nextValue);\n    if (nextValue.lastAction) {\n      if (onZoom && nextValue.lastAction === ACTION_ZOOM) onZoom(nextValue);\n      if (onPan && nextValue.lastAction === ACTION_PAN) onPan(nextValue);\n    }\n  }\n\n  /** ReactSVGPanZoom methods **/\n  pan(SVGDeltaX, SVGDeltaY) {\n    let nextValue = pan(this.getValue(), SVGDeltaX, SVGDeltaY);\n    this.setValue(nextValue);\n  }\n\n  zoom(SVGPointX, SVGPointY, scaleFactor) {\n    let nextValue = zoom(this.getValue(), SVGPointX, SVGPointY, scaleFactor);\n    this.setValue(nextValue);\n  }\n\n  fitSelection(selectionSVGPointX, selectionSVGPointY, selectionWidth, selectionHeight) {\n    let nextValue = fitSelection(this.getValue(), selectionSVGPointX, selectionSVGPointY, selectionWidth, selectionHeight);\n    this.setValue(nextValue);\n  }\n\n  fitToViewer(SVGAlignX = ALIGN_LEFT, SVGAlignY = ALIGN_TOP) {\n    let nextValue = fitToViewer(this.getValue(), SVGAlignX, SVGAlignY);\n    this.setValue(nextValue);\n  }\n\n  zoomOnViewerCenter(scaleFactor) {\n    let nextValue = zoomOnViewerCenter(this.getValue(), scaleFactor);\n    this.setValue(nextValue);\n  }\n\n  setPointOnViewerCenter(SVGPointX, SVGPointY, zoomLevel) {\n    let nextValue = setPointOnViewerCenter(this.getValue(), SVGPointX, SVGPointY, zoomLevel);\n    this.setValue(nextValue);\n  }\n\n  reset() {\n    let nextValue = reset(this.getValue());\n    this.setValue(nextValue);\n  }\n\n  openMiniature() {\n    let nextValue = openMiniature(this.getValue());\n    this.setValue(nextValue);\n  }\n\n  closeMiniature() {\n    let nextValue = closeMiniature(this.getValue());\n    this.setValue(nextValue);\n  }\n\n  /** ReactSVGPanZoom internals **/\n  handleViewerEvent(event) {\n    let {props, ViewerDOM} = this;\n\n    if (!([TOOL_NONE, TOOL_AUTO].indexOf(this.getTool()) >= 0)) return;\n    if (event.target === ViewerDOM) return;\n\n    let eventsHandler = {\n      click: props.onClick,\n      dblclick: props.onDoubleClick,\n\n      mousemove: props.onMouseMove,\n      mouseup: props.onMouseUp,\n      mousedown: props.onMouseDown,\n\n      touchstart: props.onTouchStart,\n      touchmove: props.onTouchMove,\n      touchend: props.onTouchEnd,\n      touchcancel: props.onTouchCancel,\n    };\n\n    let onEventHandler = eventsHandler[event.type];\n    if (!onEventHandler) return;\n\n    onEventHandler(eventFactory(event, props.value, ViewerDOM));\n  }\n\n  autoPanLoop() {\n    let coords = {x: this.state.pointerX, y: this.state.pointerY};\n    let nextValue = onInterval(null, this.ViewerDOM, this.getTool(), this.getValue(), this.props, coords);\n    if (this.getValue() !== nextValue) {\n      this.setValue(nextValue);\n    }\n\n    if (this.autoPanIsRunning) {\n      requestAnimationFrame(this.autoPanLoop);\n    }\n  }\n\n  onWheel(event) {\n    let nextValue = onWheel(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n    if (this.getValue() !== nextValue) this.setValue(nextValue);\n  }\n\n  /** React renderer **/\n  render() {\n    let {props, state: {pointerX, pointerY}} = this;\n    let tool = this.getTool();\n    let value = this.getValue();\n    let {customToolbar: CustomToolbar = Toolbar, customMiniature: CustomMiniature = Miniature} = props;\n\n    let panningWithToolAuto = tool === TOOL_AUTO\n      && value.mode === MODE_PANNING\n      && value.startX !== value.endX\n      && value.startY !== value.endY;\n\n    let cursor;\n\n    if (tool === TOOL_PAN)\n      cursor = cursorPolyfill(value.mode === MODE_PANNING ? 'grabbing' : 'grab');\n\n    if (tool === TOOL_ZOOM_IN)\n      cursor = cursorPolyfill('zoom-in');\n\n    if (tool === TOOL_ZOOM_OUT)\n      cursor = cursorPolyfill('zoom-out');\n\n    if (panningWithToolAuto)\n      cursor = cursorPolyfill('grabbing');\n\n    let blockChildEvents = [TOOL_PAN, TOOL_ZOOM_IN, TOOL_ZOOM_OUT].indexOf(tool) >= 0;\n    blockChildEvents = blockChildEvents || panningWithToolAuto;\n\n    const touchAction = (this.props.detectPinchGesture || [TOOL_PAN, TOOL_AUTO].indexOf(this.getTool()) !== -1) ? 'none' : undefined\n\n    const style = {display: 'block', cursor, touchAction};\n\n    return (\n      <svg\n        ref={ViewerDOM => this.ViewerDOM = ViewerDOM}\n        width={value.viewerWidth}\n        height={value.viewerHeight}\n        style={style}\n\n        onMouseDown={event => {\n          let nextValue = onMouseDown(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}\n        onMouseMove={event => {\n          let {left, top} = this.ViewerDOM.getBoundingClientRect();\n          let x = event.clientX - Math.round(left);\n          let y = event.clientY - Math.round(top);\n\n          let nextValue = onMouseMove(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props, {x, y});\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.setState({pointerX: x, pointerY: y});\n          this.handleViewerEvent(event);\n        }}\n        onMouseUp={event => {\n          let nextValue = onMouseUp(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}\n\n        onClick={event => {\n          this.handleViewerEvent(event)\n        }}\n        onDoubleClick={event => {\n          let nextValue = onDoubleClick(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}\n\n        onMouseEnter={event => {\n          if (detectTouch()) return;\n\n          if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event)\n          }\n\n          let nextValue = onMouseEnterOrLeave(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n        }}\n        onMouseLeave={event => {\n          if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event)\n          }\n\n          let nextValue = onMouseEnterOrLeave(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n        }}\n\n        onTouchStart={event => {\n          let nextValue = onTouchStart(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}\n        onTouchMove={event => {\n          let nextValue = onTouchMove(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}\n        onTouchEnd={event => {\n          let nextValue = onTouchEnd(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}\n        onTouchCancel={event => {\n          let nextValue = onTouchCancel(event, this.ViewerDOM, this.getTool(), this.getValue(), this.props);\n          if (this.getValue() !== nextValue) this.setValue(nextValue);\n          this.handleViewerEvent(event);\n        }}>\n\n        <rect\n          fill={props.background}\n          x={0}\n          y={0}\n          width={value.viewerWidth}\n          height={value.viewerHeight}\n        />\n\n        {true && <g transform={`matrix(1,0,0,1,${value.e},${value.f})`}>\n          {props.grid}\n        </g>}\n        {false && <g transform={toSVG(value)}>\n          {props.grid}\n        </g>}\n\n        <g\n          transform={toSVG(value)}\n          style={blockChildEvents ? {pointerEvents: \"none\"} : {}}>\n          {false && <rect\n            fill={this.props.SVGBackground}\n            style={this.props.SVGStyle}\n            x={value.SVGMinX || 0}\n            y={value.SVGMinY || 0}\n            width={value.SVGWidth}\n            height={value.SVGHeight}/>}\n          <g>\n            {props.children.props.children}\n          </g>\n        </g>\n      </svg>\n    );\n  }\n}\n\nReactSVGPanZoom.propTypes = {\n  /**************************************************************************/\n  /*  Viewer configuration                                                  */\n  /**************************************************************************/\n\n  /**\n   *   width of the viewer displayed on screen\n   */\n  width: PropTypes.number.isRequired,\n\n  /**\n  * height of the viewer displayed on screen\n  */\n  height: PropTypes.number.isRequired,\n\n  /**\n  * value of the viewer (current camera view)\n  */\n  value: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.shape({\n      version: PropTypes.oneOf([2]).isRequired,\n      mode: PropTypes.oneOf([MODE_IDLE, MODE_PANNING, MODE_ZOOMING]).isRequired,\n      focus: PropTypes.bool.isRequired,\n      a: PropTypes.number.isRequired,\n      b: PropTypes.number.isRequired,\n      c: PropTypes.number.isRequired,\n      d: PropTypes.number.isRequired,\n      e: PropTypes.number.isRequired,\n      f: PropTypes.number.isRequired,\n      viewerWidth: PropTypes.number.isRequired,\n      viewerHeight: PropTypes.number.isRequired,\n      SVGMinX: PropTypes.number.isRequired,\n      SVGMinY: PropTypes.number.isRequired,\n      SVGWidth: PropTypes.number.isRequired,\n      SVGHeight: PropTypes.number.isRequired,\n      startX: PropTypes.number,\n      startY: PropTypes.number,\n      endX: PropTypes.number,\n      endY: PropTypes.number,\n      miniatureOpen: PropTypes.bool.isRequired,\n    })\n  ]).isRequired,\n\n  /**\n  * handler something changed\n  */\n  onChangeValue: PropTypes.func.isRequired,\n\n  /**\n  * current active tool (TOOL_NONE, TOOL_PAN, TOOL_ZOOM_IN, TOOL_ZOOM_OUT)\n  */\n  tool: PropTypes.oneOf([TOOL_AUTO, TOOL_NONE, TOOL_PAN, TOOL_ZOOM_IN, TOOL_ZOOM_OUT]).isRequired,\n\n  /**\n  * handler tool changed\n  */\n  onChangeTool: PropTypes.func.isRequired,\n\n  /**************************************************************************/\n  /* Customize style                                                        */\n  /**************************************************************************/\n\n  /**\n  * background of the viewer\n  */\n  background: PropTypes.string,\n\n  /**\n  * background of the svg\n  */\n  SVGBackground: PropTypes.string,\n\n  /**\n  * style of the svg\n  */\n  SVGStyle: PropTypes.object,\n\n  /**\n  * CSS style of the Viewer\n  */\n  style: PropTypes.object,\n\n  /**\n  * className of the Viewer\n  */\n  className: PropTypes.string,\n\n  /**************************************************************************/\n  /* Detect events                                                          */\n  /**************************************************************************/\n\n  /**\n  * perform zoom operation on mouse scroll\n  */\n  detectWheel: PropTypes.bool,\n\n  /**\n  * perform PAN if the mouse is on viewer border\n  */\n  detectAutoPan: PropTypes.bool,\n\n  /**\n  * perform zoom operation on pinch gesture\n  */\n  detectPinchGesture: PropTypes.bool,\n\n  /**\n  * handler zoom level changed\n  */\n  onZoom: PropTypes.func,\n\n  /**\n  * handler pan action performed\n  */\n  onPan: PropTypes.func,\n\n  /**\n  * handler click\n  */\n  onClick: PropTypes.func,\n\n  /**\n  * handler double click\n  */\n  onDoubleClick: PropTypes.func,\n\n  /**\n  * handler mouseup\n  */\n  onMouseUp: PropTypes.func,\n\n  /**\n  * handler mousemove\n  */\n  onMouseMove: PropTypes.func,\n\n  /**\n  * handler mousedown\n  */\n  onMouseDown: PropTypes.func,\n\n  /**\n  * handler mouseenter\n  */\n  onMouseEnter: PropTypes.func,\n\n  /**\n  * handler mouseleave\n  */\n  onMouseLeave: PropTypes.func,\n\n  /**************************************************************************/\n  /* Some advanced configurations                                           */\n  /**************************************************************************/\n\n  /**\n  * if disabled the user can move the image outside the viewer\n  */\n  preventPanOutside: PropTypes.bool,\n\n  /**\n  * how much scale in or out\n  */\n  scaleFactor: PropTypes.number,\n\n  /**\n  * how much scale in or out on mouse wheel (requires detectWheel enabled)\n  */\n  scaleFactorOnWheel: PropTypes.number,\n\n  /**\n  * maximum amount of scale a user can zoom in to\n  */\n  scaleFactorMax: PropTypes.number,\n\n  /**\n  * minimum amount of a scale a user can zoom out of\n  */\n  scaleFactorMin: PropTypes.number,\n\n  /**\n  * modifier keys //https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState\n  */\n  modifierKeys: PropTypes.array,\n\n  /**\n  * Turn off zoom on double click\n  */\n  disableDoubleClickZoomWithToolAuto: PropTypes.bool,\n\n  /**************************************************************************/\n  /* Miniature configurations                                                 */\n  /**************************************************************************/\n\n  /**\n  * override miniature component\n  */\n  customMiniature: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  /**\n  * miniature props\n  */\n  miniatureProps: PropTypes.shape({\n    position: PropTypes.oneOf([POSITION_NONE, POSITION_RIGHT, POSITION_LEFT]),\n    background: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n\n  /**************************************************************************/\n  /* Toolbar configurations                                                 */\n  /**************************************************************************/\n\n  /**\n  * override toolbar component\n  */\n  customToolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n\n  /**\n  * toolbar props\n  */\n  toolbarProps: PropTypes.shape({\n    position: PropTypes.oneOf([POSITION_NONE, POSITION_TOP, POSITION_RIGHT, POSITION_BOTTOM, POSITION_LEFT]),\n    SVGAlignX: PropTypes.oneOf([ALIGN_CENTER, ALIGN_LEFT, ALIGN_RIGHT]),\n    SVGAlignY: PropTypes.oneOf([ALIGN_CENTER, ALIGN_TOP, ALIGN_BOTTOM]),\n    activeToolColor: PropTypes.string,\n  }),\n\n  /**************************************************************************/\n  /* Children Check                                                         */\n  /**************************************************************************/\n  /**\n  * accept only one node SVG\n  */\n  children: function (props, propName, componentName) {\n    // Only accept a single child, of the appropriate type\n    //credits: http://www.mattzabriskie.com/blog/react-validating-children\n    let prop = props[propName];\n    let types = ['svg'];\n    if (React.Children.count(prop) !== 1 ||\n      types.indexOf(prop.type) === -1) {\n      return new Error(\n        '`' + componentName + '` ' +\n        'should have a single child of the following types: ' +\n        ' `' + types.join('`, `') + '`.'\n      );\n    }\n    if (\n      (!prop.props.hasOwnProperty('width') || !prop.props.hasOwnProperty('height')) &&\n      (!prop.props.hasOwnProperty('viewBox'))\n    ) {\n      return new Error('SVG should have props `width` and `height` or `viewBox`');\n    }\n  },\n\n  grid: PropTypes.element.isRequired,\n};\n\nReactSVGPanZoom.defaultProps = {\n  style: {},\n  background: \"#616264\",\n  SVGBackground: \"#fff\",\n  SVGStyle: {},\n  detectWheel: true,\n  detectAutoPan: true,\n  detectPinchGesture: true,\n  modifierKeys: [\"Alt\", \"Shift\", \"Control\"],\n  preventPanOutside: true,\n  scaleFactor: 1.1,\n  scaleFactorOnWheel: 1.06,\n  disableZoomWithToolAuto: false,\n  onZoom: null,\n  onPan: null,\n  toolbarProps: {},\n  miniatureProps: {},\n};\n","import ViewerMouseEvent from './viewer-mouse-event';\nimport ViewerTouchEvent from './viewer-touch-event';\n\nexport default function eventFactory(originalEvent, value, SVGViewer) {\n\n  let eventType = originalEvent.type;\n\n  switch (eventType) {\n    case \"mousemove\":\n    case \"mouseup\":\n    case \"mousedown\":\n    case \"click\":\n    case \"dblclick\":\n      return new ViewerMouseEvent(originalEvent, value, SVGViewer);\n\n    case \"touchstart\":\n    case \"touchmove\":\n    case \"touchend\":\n    case \"touchcancel\":\n      return new ViewerTouchEvent(originalEvent, value, SVGViewer);\n\n    default:\n      throw new Error(`${eventType} not supported`);\n  }\n}\n","//http://stackoverflow.com/a/4819886/1398836\n\nexport default function isTouchDevice() {\n  return 'ontouchstart' in window        // works on most browsers\n    || navigator.maxTouchPoints;       // works on IE10/11 and Surface\n};\n","import PropTypes from 'prop-types'\n\nexport default function Grid({width, height, opacity, zoom, scales, unitPixelSize}) {\n  let elementSize = unitPixelSize * zoom\n  let scale = scales.filter(item => {\n    if (zoom >= 1) {\n      return 'zoom-in' === item.dir && elementSize > item.scale\n    } else {\n      return 'zoom-out' === item.dir && elementSize < item.scale\n    }\n  })\n  scale = scale.length ? scale[scale.length - 1] : null\n\n  return (\n    <svg id=\"diagram_gridline_svg\" width={width * zoom} height={height * zoom} opacity={opacity} className=\"e-grid-layer\" style={{position: 'absolute', top: 0, left: 0, overflow: 'hidden', pointerEvents: 'none'}}>\n      <g id=\"diagram_gridline\" transform=\"translate(0,0)\">\n        <rect id=\"diagram_grid_rect\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#diagram_pattern)\"></rect>\n      </g>\n      <defs id=\"diagram_grid_pattern_defn\">\n        <pattern id=\"diagram_pattern\" x=\"0\" y=\"0\" width={scale.display * zoom} height={scale.display * zoom} patternUnits=\"userSpaceOnUse\">\n          <path strokeWidth=\"1.25\" d={`M0,${scale.thickAdd * zoom} L${scale.display * zoom},${scale.thickAdd * zoom} Z`} className=\"e-diagram-thick-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M0,${(1 * (scale.step + scale.thinAdd)) * zoom} L${scale.display * zoom},${(1 * (scale.step + scale.thinAdd)) * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M0,${(2 * (scale.step + scale.thinAdd)) * zoom} L${scale.display * zoom},${(2 * (scale.step + scale.thinAdd)) * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M0,${(3 * (scale.step + scale.thinAdd)) * zoom} L${scale.display * zoom},${(3 * (scale.step + scale.thinAdd)) * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M0,${(4 * (scale.step + scale.thinAdd)) * zoom} L${scale.display * zoom},${(4 * (scale.step + scale.thinAdd)) * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"1.25\" d={`M${scale.thickAdd * zoom},0 L${scale.thickAdd * zoom},${scale.display * zoom} Z`} className=\"e-diagram-thick-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M${(1 * (scale.step + scale.thinAdd)) * zoom},0 L${(1 * (scale.step + scale.thinAdd)) * zoom},${scale.display * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M${(2 * (scale.step + scale.thinAdd)) * zoom},0 L${(2 * (scale.step + scale.thinAdd)) * zoom},${scale.display * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M${(3 * (scale.step + scale.thinAdd)) * zoom},0 L${(3 * (scale.step + scale.thinAdd)) * zoom},${scale.display * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n          <path strokeWidth=\"0.25\" d={`M${(4 * (scale.step + scale.thinAdd)) * zoom},0 L${(4 * (scale.step + scale.thinAdd)) * zoom},${scale.display * zoom} Z`} className=\"e-diagram-thin-grid\" stroke=\"lightgray\"></path>\n        </pattern>\n      </defs>\n    </svg>\n  )\n}\n\nGrid.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  opacity: PropTypes.number.isRequired,\n  zoom: PropTypes.number.isRequired,\n  scales: PropTypes.array,\n  unitPixelSize: PropTypes.number.isRequired,\n}\n\nGrid.defaultProps = {\n  scales: [\n    {\n      scale: 0,\n      display: 100,\n      step: 20,\n      thinAdd: 0.125,\n      thickAdd: 1.625,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 150,\n      display: 50,\n      step: 10,\n      thinAdd: 0.125,\n      thickAdd: 0.625,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 250,\n      display: 25,\n      step: 5,\n      thinAdd: 0.100,\n      thickAdd: 0.225,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 450,\n      display: 12.5,\n      step: 2.5,\n      thinAdd: 0,\n      thickAdd: 0.100,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 100,\n      display: 100,\n      step: 20,\n      thinAdd: 0.125,\n      thickAdd: 0.625,\n      dir: 'zoom-out',\n    },\n    {\n      scale: 70,\n      display: 200,\n      step: 40,\n      thinAdd: 0.125,\n      thickAdd: 0.625,\n      dir: 'zoom-out',\n    },\n    {\n      scale: 40,\n      display: 500,\n      step: 100,\n      thinAdd: 0.125,\n      thickAdd: 1,\n      dir: 'zoom-out',\n    },\n  ]\n}\n","import PropTypes from 'prop-types'\n\nexport default function RulerX(props) {\n  let elementW = props.unitPixelSize * props.zoom\n  let scale = props.scales.filter(item => {\n    if (props.zoom >= 1) {\n      return 'zoom-in' === item.dir && elementW > item.scale\n    } else {\n      return 'zoom-out' === item.dir && elementW < item.scale\n    }\n  })\n  scale = scale.length ? scale[scale.length - 1] : null\n  const iterator = (props.unitPixelSize / (scale.display || 1)) * props.positiveUnitsNumber\n\n  const rulerStyle = {\n    position: 'inherit',\n    fontFamily: 'sans-serif',\n    backgroundColor: props.backgroundColor,\n  }\n\n  /* optimize ruler */\n  const renderSegment = (val) => {\n    const firstSegmentChecker = val > Math.abs(props.valueE) - (scale.display * props.zoom)\n    const lastSegmentChecker = val < Math.abs(props.valueE) + props.width\n    if (firstSegmentChecker && lastSegmentChecker) {\n      return true\n    }\n    return false\n  }\n\n  return (\n    <div>\n      <svg id=\"diagram_hRuler_Ruler_svg\" width={props.width} height=\"25\" style={rulerStyle}>\n        <g transform={`matrix(1,0,0,1,${props.valueE},0)`}>\n          {scale && Array.from(Array(iterator), (e, i) => renderSegment(((i * scale.display) + scale.add) * props.zoom) && (\n            <g className=\"e-ruler-segment\" transform={`translate(${((i * scale.display) + scale.add) * props.zoom}, 0.5)`} key={i}>\n              <line x1=\"0\" y1=\"25\" x2=\"0\" y2=\"0\" strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1={(1 * scale.step) * props.zoom} y1=\"25\" x2={(1 * scale.step) * props.zoom} y2=\"17.5\" strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1={(2 * scale.step) * props.zoom} y1=\"25\" x2={(2 * scale.step) * props.zoom} y2=\"17.5\" strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1={(3 * scale.step) * props.zoom} y1=\"25\" x2={(3 * scale.step) * props.zoom} y2=\"17.5\" strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1={(4 * scale.step) * props.zoom} y1=\"25\" x2={(4 * scale.step) * props.zoom} y2=\"17.5\" strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <text style={{fontSize:'10pt',fill:props.fontColor}} className=\"e-ruler-tick-label\" x=\"2\" y=\"12.5\">{i * scale.display}</text>\n            </g>\n          ))}\n\n          {props.marker && <line transform={`translate(${(props.mouseX * props.zoom)},0.5)`} id=\"diagram_hRuler_marker\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" stroke={props.markerColor} strokeWidth={1.5} className=\"e-d-ruler-marker\"></line>}\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nRulerX.propTypes = {\n  scales: PropTypes.array,\n  unitPixelSize: PropTypes.number.isRequired,\n  positiveUnitsNumber: PropTypes.number,\n  zoom: PropTypes.number.isRequired,\n  mouseX: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  valueE: PropTypes.number.isRequired,\n  backgroundColor: PropTypes.string,\n  fontColor: PropTypes.string,\n  markerColor: PropTypes.string,\n  marker: PropTypes.bool,\n}\n\nRulerX.defaultProps = {\n  positiveUnitsNumber: 50,\n  backgroundColor: '#f5f5f5',\n  fontColor: '#616161',\n  markerColor: 'red',\n  marker: false,\n  scales: [\n    {\n      scale: 0,\n      display: 100,\n      step: 20,\n      add: 0.5,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 150,\n      display: 50,\n      step: 10,\n      add: 0.5,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 250,\n      display: 25,\n      step: 5,\n      add: 0,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 450,\n      display: 12.5,\n      step: 2.5,\n      add: 0,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 100,\n      display: 100,\n      step: 20,\n      add: 0.5,\n      dir: 'zoom-out',\n    },\n    {\n      scale: 70,\n      display: 200,\n      step: 40,\n      add: 0,\n      dir: 'zoom-out',\n    },\n    {\n      scale: 40,\n      display: 500,\n      step: 100,\n      add: 0,\n      dir: 'zoom-out',\n    },\n  ],\n}\n","import PropTypes from 'prop-types'\n\nexport default function RulerY(props) {\n  let elementH = props.unitPixelSize * props.zoom\n  let scale = props.scales.filter(item => {\n    if (props.zoom >= 1) {\n      return 'zoom-in' === item.dir && elementH > item.scale\n    } else {\n      return 'zoom-out' === item.dir && elementH < item.scale\n    }\n  })\n  scale = scale.length ? scale[scale.length - 1] : null\n  let iterator = (props.unitPixelSize / (scale.display || 1)) * props.positiveUnitsNumber\n      iterator = Math.ceil(iterator)\n\n  const rulerStyle = {\n    position: 'inherit',\n    fontFamily: 'sans-serif',\n    backgroundColor: props.backgroundColor,\n  }\n\n  const translateX = (val) => {\n    const digits = val.toString().length\n    return digits === 2 ? -17.5 :\n      digits === 4 ? -34.859375 :\n      digits === 5 ? -42.859375 :\n      digits === 6 ? -49.859375 :\n      digits === 7 ? -59.859375 : -25.859375\n  }\n\n  /* optimize ruler */\n  const renderSegment = (val) => {\n    const firstSegmentChecker = val > Math.abs(props.valueF) - (scale.display * props.zoom)\n    const lastSegmentChecker = val < Math.abs(props.valueF) + props.height\n    if (firstSegmentChecker && lastSegmentChecker) {\n      return true\n    }\n    return false\n  }\n\n  return (\n    <div>\n      <svg id=\"diagram_vRuler_Ruler_svg\" width=\"25px\" height={props.height} style={rulerStyle}>\n        <g transform={`matrix(1,0,0,1,0,${props.valueF})`}>\n          {Array.from(Array(iterator), (e, i) => renderSegment(((i * scale.display) + scale.add) * props.zoom) && (\n            <g className=\"e-ruler-segment\" transform={`translate(0.5, ${((i * scale.display) + scale.add) * props.zoom})`} key={i}>\n              <line x1=\"25\" y1=\"0\" x2=\"0\" y2=\"0\" strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1=\"25\" y1={(1 * scale.step) * props.zoom} x2=\"17.5\" y2={(1 * scale.step) * props.zoom} strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1=\"25\" y1={(2 * scale.step) * props.zoom} x2=\"17.5\" y2={(2 * scale.step) * props.zoom} strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1=\"25\" y1={(3 * scale.step) * props.zoom} x2=\"17.5\" y2={(3 * scale.step) * props.zoom} strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              <line x1=\"25\" y1={(4 * scale.step) * props.zoom} x2=\"17.5\" y2={(4 * scale.step) * props.zoom} strokeWidth=\"1\" stroke=\"black\" className=\"e-ruler-tick\"></line>\n              {i === 0 ?\n                <text style={{fontSize:'10pt',fill:props.fontColor}} className=\"e-ruler-tick-label\" x=\"0\" y=\"16.671875\" transform=\"rotate(270)translate(-10.625,-4.171875)\">{i * scale.display}</text> :\n                <text style={{fontSize:'10pt',fill:props.fontColor}} className=\"e-ruler-tick-label\" x=\"0\" y=\"16.671875\" transform={`rotate(270)translate(${translateX(i * scale.display)},-4.171875)`}>{i * scale.display}</text>}\n            </g>\n          ))}\n\n          {props.marker && <line transform={`translate(0.5,${props.mouseY * props.zoom})`} id=\"diagram_wRuler_marker\" x1=\"0\" y1=\"0\" x2=\"25\" y2=\"0\" stroke={props.markerColor} strokeWidth={1.5} className=\"e-d-ruler-marker\"></line>}\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nRulerY.propTypes = {\n  scales: PropTypes.array,\n  unitPixelSize: PropTypes.number.isRequired,\n  positiveUnitsNumber: PropTypes.number,\n  zoom: PropTypes.number.isRequired,\n  mouseY: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  valueF: PropTypes.number.isRequired,\n  backgroundColor: PropTypes.string,\n  fontColor: PropTypes.string,\n  markerColor: PropTypes.string,\n  marker: PropTypes.bool,\n}\n\nRulerY.defaultProps = {\n  positiveUnitsNumber: 50,\n  backgroundColor: '#f5f5f5',\n  fontColor: '#616161',\n  markerColor: 'red',\n  marker: false,\n  scales: [\n    {\n      scale: 0,\n      display: 100,\n      step: 20,\n      add: 0.5,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 150,\n      display: 50,\n      step: 10,\n      add: 0.5,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 250,\n      display: 25,\n      step: 5,\n      add: 0,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 450,\n      display: 12.5,\n      step: 2.5,\n      add: 0,\n      dir: 'zoom-in',\n    },\n    {\n      scale: 100,\n      display: 100,\n      step: 20,\n      add: 0.5,\n      dir: 'zoom-out',\n    },\n    {\n      scale: 70,\n      display: 200,\n      step: 40,\n      add: 0,\n      dir: 'zoom-out',\n    },\n    {\n      scale: 40,\n      display: 500,\n      step: 100,\n      add: 0,\n      dir: 'zoom-out',\n    },\n  ],\n}\n","/** @description Return float fixed to desired precision\n *  @param {number} num Float to fix\n *  @param {number} precision Desired precision, or 6 if not specified\n *  @return {number}\n*/\nexport function toFixedFloat(num, precision = 6) {\n  if (num && precision) {\n    return parseFloat(parseFloat(num).toFixed(precision));\n  }\n  return 0;\n}\n\n/** @description Return absolute value of a number\n *  @param {number} n Number of wich get value without sign\n *  @return {number}\n*/\nexport const fAbs = n => { let x = n; (x < 0) && (x = ~x + 1); return x; };\n\n/** @description Multiply two matrices\n *  @param {Array} m1 Matrix 1\n *  @param {Array} m2 Matrix 2\n *  @return {Array}\n*/\nexport const multiplyMatrices = (m1, m2) => {\n  let result = [];\n  for (let i = 0; i < m1.length; i++) {\n    result[i] = [];\n    for (let j = 0; j < m2[0].length; j++) {\n      let sum = 0;\n      for (let k = 0; k < m1[0].length; k++) {\n        sum += m1[i][k] * m2[k][j];\n      }\n      result[i][j] = sum;\n    }\n  }\n  return result;\n};\n","// ACTIONS project\nexport const NEW_PROJECT = 'NEW_PROJECT';\nexport const LOAD_PROJECT = 'LOAD_PROJECT';\nexport const SAVE_PROJECT = 'SAVE_PROJECT';\nexport const OPEN_CATALOG = 'OPEN_CATALOG';\nexport const SELECT_TOOL_EDIT = 'SELECT_TOOL_EDIT';\nexport const UNSELECT_ALL = 'UNSELECT_ALL';\nexport const SET_PROPERTIES = 'SET_PROPERTIES';\nexport const SET_ITEMS_ATTRIBUTES = 'SET_ITEMS_ATTRIBUTES';\nexport const SET_LINES_ATTRIBUTES = 'SET_LINES_ATTRIBUTES';\nexport const SET_HOLES_ATTRIBUTES = 'SET_HOLES_ATTRIBUTES';\nexport const REMOVE = 'REMOVE';\nexport const UNDO = 'UNDO';\nexport const ROLLBACK = 'ROLLBACK';\nexport const SET_PROJECT_PROPERTIES = 'SET_PROJECT_PROPERTIES';\nexport const OPEN_PROJECT_CONFIGURATOR = 'OPEN_PROJECT_CONFIGURATOR';\nexport const INIT_CATALOG = 'INIT_CATALOG';\nexport const UPDATE_MOUSE_COORDS = 'UPDATE_MOUSE_COORDS';\nexport const UPDATE_ZOOM_SCALE = 'UPDATE_ZOOM_SCALE';\nexport const TOGGLE_SNAP = 'TOGGLE_SNAP';\nexport const CHANGE_CATALOG_PAGE = 'CHANGE_CATALOG_PAGE';\nexport const GO_BACK_TO_CATALOG_PAGE = 'GO_BACK_TO_CATALOG_PAGE';\nexport const THROW_ERROR = 'THROW_ERROR';\nexport const THROW_WARNING = 'THROW_WARNING';\nexport const COPY_PROPERTIES = 'COPY_PROPERTIES';\nexport const PASTE_PROPERTIES = 'PASTE_PROPERTIES';\nexport const PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY = 'PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY';\nexport const ALTERATE_STATE = 'ALTERATE_STATE';\nexport const SET_MODE = 'SET_MODE';\nexport const ADD_HORIZONTAL_GUIDE = 'ADD_HORIZONTAL_GUIDE';\nexport const ADD_VERTICAL_GUIDE = 'ADD_VERTICAL_GUIDE';\nexport const ADD_CIRCULAR_GUIDE = 'ADD_CIRCULAR_GUIDE';\nexport const REMOVE_HORIZONTAL_GUIDE = 'REMOVE_HORIZONTAL_GUIDE';\nexport const REMOVE_VERTICAL_GUIDE = 'REMOVE_VERTICAL_GUIDE';\nexport const REMOVE_CIRCULAR_GUIDE = 'REMOVE_CIRCULAR_GUIDE';\n\n// ACTIONS viewer2D\nexport const SELECT_TOOL_ZOOM_IN = 'SELECT_TOOL_ZOOM_IN';\nexport const SELECT_TOOL_ZOOM_OUT = 'SELECT_TOOL_ZOOM_OUT';\nexport const SELECT_TOOL_PAN = 'SELECT_TOOL_PAN';\nexport const UPDATE_2D_CAMERA = 'UPDATE_2D_CAMERA';\n\n//ACTIONS viewer3D\nexport const SELECT_TOOL_3D_VIEW = 'SELECT_TOOL_3D_VIEW';\nexport const SELECT_TOOL_3D_FIRST_PERSON = 'SELECT_TOOL_3D_FIRST_PERSON';\n\n//ACTIONS items\nexport const SELECT_TOOL_DRAWING_ITEM = 'SELECT_TOOL_DRAWING_ITEM';\nexport const UPDATE_DRAWING_ITEM = 'UPDATE_DRAWING_ITEM';\nexport const END_DRAWING_ITEM = 'END_DRAWING_ITEM';\nexport const BEGIN_DRAGGING_ITEM = 'BEGIN_DRAGGING_ITEM';\nexport const UPDATE_DRAGGING_ITEM = 'UPDATE_DRAGGING_ITEM';\nexport const END_DRAGGING_ITEM = 'END_DRAGGING_ITEM';\nexport const BEGIN_ROTATING_ITEM = 'BEGIN_ROTATING_ITEM';\nexport const UPDATE_ROTATING_ITEM = 'UPDATE_ROTATING_ITEM';\nexport const END_ROTATING_ITEM = 'END_ROTATING_ITEM';\n\n//ACTIONS groups\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const ADD_GROUP_FROM_SELECTED = 'ADD_GROUP_FROM_SELECTED';\nexport const SELECT_GROUP = 'SELECT_GROUP';\nexport const UNSELECT_GROUP = 'UNSELECT_GROUP';\nexport const ADD_TO_GROUP = 'ADD_TO_GROUP';\nexport const REMOVE_FROM_GROUP = 'REMOVE_FROM_GROUP';\nexport const SET_GROUP_PROPERTIES = 'SET_GROUP_PROPERTIES';\nexport const SET_GROUP_ATTRIBUTES = 'SET_GROUP_ATTRIBUTES';\nexport const SET_GROUP_BARYCENTER = 'SET_GROUP_BARYCENTER';\nexport const REMOVE_GROUP = 'REMOVE_GROUP';\nexport const REMOVE_GROUP_AND_DELETE_ELEMENTS = 'REMOVE_GROUP_AND_DELETE_ELEMENTS';\nexport const GROUP_TRANSLATE = 'GROUP_TRANSLATE';\nexport const GROUP_ROTATE = 'GROUP_ROTATE';\n\n//ACTION drawings\nexport const SELECT_HOLE = 'SELECT_HOLE';\nexport const SELECT_AREA = 'SELECT_AREA';\nexport const SELECT_ITEM = 'SELECT_ITEM';\nexport const SELECT_LINE = 'SELECT_LINE';\nexport const SELECT_TOOL_DRAWING_LINE = 'SELECT_TOOL_DRAWING_LINE';\nexport const BEGIN_DRAWING_LINE = 'BEGIN_DRAWING_LINE';\nexport const UPDATE_DRAWING_LINE = 'UPDATE_DRAWING_LINE';\nexport const END_DRAWING_LINE = 'END_DRAWING_LINE';\nexport const SELECT_TOOL_DRAWING_HOLE = 'SELECT_TOOL_DRAWING_HOLE';\nexport const UPDATE_DRAWING_HOLE = 'UPDATE_DRAWING_HOLE'; //SHOULD BE SLPITTED IN BEGIN_DRAWING_HOLE AND UPDATE_DRAWING_HOLE\nexport const END_DRAWING_HOLE = 'END_DRAWING_HOLE';\nexport const BEGIN_DRAGGING_LINE = 'BEGIN_DRAGGING_LINE';\nexport const UPDATE_DRAGGING_LINE = 'UPDATE_DRAGGING_LINE';\nexport const END_DRAGGING_LINE = 'END_DRAGGING_LINE';\nexport const SELECT_TOOL_UPLOAD_IMAGE = 'SELECT_TOOL_UPLOAD_IMAGE';\nexport const BEGIN_UPLOADING_IMAGE = 'BEGIN_UPLOADING_IMAGE';\nexport const END_UPLOADING_IMAGE = 'END_UPLOADING_IMAGE';\nexport const BEGIN_FITTING_IMAGE = 'BEGIN_FITTING_IMAGE';\nexport const END_FITTING_IMAGE = 'END_FITTING_IMAGE';\nexport const BEGIN_DRAGGING_HOLE = 'BEGIN_DRAGGING_HOLE';\nexport const UPDATE_DRAGGING_HOLE = 'UPDATE_DRAGGING_HOLE';\nexport const END_DRAGGING_HOLE = 'END_DRAGGING_HOLE';\n\n//ACTIONS vertices\nexport const BEGIN_DRAGGING_VERTEX = 'BEGIN_DRAGGING_VERTEX';\nexport const UPDATE_DRAGGING_VERTEX = 'UPDATE_DRAGGING_VERTEX';\nexport const END_DRAGGING_VERTEX = 'END_DRAGGING_VERTEX';\n\n//ACTIONS scene\nexport const SET_LAYER_PROPERTIES = 'SET_LAYER_PROPERTIES';\nexport const ADD_LAYER = 'ADD_LAYER';\nexport const SELECT_LAYER = 'SELECT_LAYER';\nexport const REMOVE_LAYER = 'REMOVE_LAYER';\n\n//GROUPING ACTIONS\nexport const PROJECT_ACTIONS = {\n  NEW_PROJECT,\n  LOAD_PROJECT,\n  SAVE_PROJECT,\n  OPEN_CATALOG,\n  SELECT_TOOL_EDIT,\n  UNSELECT_ALL,\n  SET_PROPERTIES,\n  SET_ITEMS_ATTRIBUTES,\n  SET_LINES_ATTRIBUTES,\n  SET_HOLES_ATTRIBUTES,\n  REMOVE,\n  UNDO,\n  ROLLBACK,\n  SET_PROJECT_PROPERTIES,\n  OPEN_PROJECT_CONFIGURATOR,\n  INIT_CATALOG,\n  UPDATE_MOUSE_COORDS,\n  UPDATE_ZOOM_SCALE,\n  TOGGLE_SNAP,\n  CHANGE_CATALOG_PAGE,\n  GO_BACK_TO_CATALOG_PAGE,\n  THROW_ERROR,\n  THROW_WARNING,\n  COPY_PROPERTIES,\n  PASTE_PROPERTIES,\n  PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY,\n  ALTERATE_STATE,\n  SET_MODE,\n  ADD_HORIZONTAL_GUIDE,\n  ADD_VERTICAL_GUIDE,\n  ADD_CIRCULAR_GUIDE,\n  REMOVE_HORIZONTAL_GUIDE,\n  REMOVE_VERTICAL_GUIDE,\n  REMOVE_CIRCULAR_GUIDE\n};\n\nexport const VIEWER2D_ACTIONS = {\n  SELECT_TOOL_ZOOM_IN,\n  SELECT_TOOL_ZOOM_OUT,\n  SELECT_TOOL_PAN,\n  UPDATE_2D_CAMERA\n};\n\nexport const VIEWER3D_ACTIONS = {\n  SELECT_TOOL_3D_VIEW,\n  SELECT_TOOL_3D_FIRST_PERSON\n};\n\nexport const ITEMS_ACTIONS = {\n  SELECT_ITEM,\n  SELECT_TOOL_DRAWING_ITEM,\n  UPDATE_DRAWING_ITEM,\n  END_DRAWING_ITEM,\n  BEGIN_DRAGGING_ITEM,\n  UPDATE_DRAGGING_ITEM,\n  END_DRAGGING_ITEM,\n  BEGIN_ROTATING_ITEM,\n  UPDATE_ROTATING_ITEM,\n  END_ROTATING_ITEM\n};\n\nexport const HOLE_ACTIONS = {\n  SELECT_HOLE,\n  SELECT_TOOL_DRAWING_HOLE,\n  UPDATE_DRAWING_HOLE,\n  END_DRAWING_HOLE,\n  BEGIN_DRAGGING_HOLE,\n  UPDATE_DRAGGING_HOLE,\n  END_DRAGGING_HOLE\n};\n\nexport const LINE_ACTIONS = {\n  SELECT_LINE,\n  SELECT_TOOL_DRAWING_LINE,\n  BEGIN_DRAWING_LINE,\n  UPDATE_DRAWING_LINE,\n  END_DRAWING_LINE,\n  BEGIN_DRAGGING_LINE,\n  UPDATE_DRAGGING_LINE,\n  END_DRAGGING_LINE\n};\n\nexport const AREA_ACTIONS = {\n  SELECT_AREA\n};\n\nexport const GROUP_ACTIONS = {\n  ADD_GROUP,\n  ADD_GROUP_FROM_SELECTED,\n  SELECT_GROUP,\n  UNSELECT_GROUP,\n  ADD_TO_GROUP,\n  REMOVE_FROM_GROUP,\n  SET_GROUP_PROPERTIES,\n  SET_GROUP_ATTRIBUTES,\n  SET_GROUP_BARYCENTER,\n  REMOVE_GROUP,\n  REMOVE_GROUP_AND_DELETE_ELEMENTS,\n  GROUP_TRANSLATE,\n  GROUP_ROTATE\n};\n\nexport const SCENE_ACTIONS = {\n  ADD_LAYER,\n  SET_LAYER_PROPERTIES,\n  SELECT_LAYER,\n  REMOVE_LAYER\n};\n\nexport const VERTEX_ACTIONS = {\n  BEGIN_DRAGGING_VERTEX,\n  UPDATE_DRAGGING_VERTEX,\n  END_DRAGGING_VERTEX\n};\n\n//MODES\nexport const MODE_IDLE = 'MODE_IDLE';\nexport const MODE_2D_ZOOM_IN = 'MODE_2D_ZOOM_IN';\nexport const MODE_2D_ZOOM_OUT = 'MODE_2D_ZOOM_OUT';\nexport const MODE_2D_PAN = 'MODE_2D_PAN';\nexport const MODE_3D_VIEW = 'MODE_3D_VIEW';\nexport const MODE_3D_FIRST_PERSON = 'MODE_3D_FIRST_PERSON';\nexport const MODE_WAITING_DRAWING_LINE = 'MODE_WAITING_DRAWING_LINE';\nexport const MODE_DRAGGING_LINE = 'MODE_DRAGGING_LINE';\nexport const MODE_DRAGGING_VERTEX = 'MODE_DRAGGING_VERTEX';\nexport const MODE_DRAGGING_ITEM = 'MODE_DRAGGING_ITEM';\nexport const MODE_DRAGGING_HOLE = 'MODE_DRAGGING_HOLE';\nexport const MODE_DRAWING_LINE = 'MODE_DRAWING_LINE';\nexport const MODE_DRAWING_HOLE = 'MODE_DRAWING_HOLE';\nexport const MODE_DRAWING_ITEM = 'MODE_DRAWING_ITEM';\nexport const MODE_ROTATING_ITEM = 'MODE_ROTATING_ITEM';\nexport const MODE_UPLOADING_IMAGE = 'MODE_UPLOADING_IMAGE';\nexport const MODE_FITTING_IMAGE = 'MODE_FITTING_IMAGE';\nexport const MODE_VIEWING_CATALOG = 'MODE_VIEWING_CATALOG';\nexport const MODE_CONFIGURING_PROJECT = 'MODE_CONFIGURING_PROJECT';\n\n//Thinking about it...\n//https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/Proxy\n/*\nlet MODE_DEF = [\n  'IDLE',\n  '2D_ZOOM_IN',\n  '2D_ZOOM_OUT',\n  '2D_PAN',\n  '3D_VIEW',\n  '3D_FIRST_PERSON',\n  'WAITING_DRAWING_LINE',\n  'DRAGGING_LINE',\n  'DRAGGING_VERTEX',\n  'DRAGGING_ITEM',\n  'DRAGGING_HOLE',\n  'DRAWING_LINE',\n  'DRAWING_HOLE',\n  'DRAWING_ITEM',\n  'ROTATING_ITEM',\n  'UPLOADING_IMAGE',\n  'FITTING_IMAGE',\n  'VIEWING_CATALOG',\n  'CONFIGURING_PROJECT',\n];\n\nexport const MODE = new Proxy( MODE_DEF, { get: (target, name) => { return target.indexOf(name) !== -1 ? name : null } } );\n*/\n\nexport const MODE_SNAPPING = [\n  MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN,\n  MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE,\n  MODE_DRAWING_ITEM, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX,\n  MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE,\n  MODE_UPLOADING_IMAGE, MODE_ROTATING_ITEM\n];\n\n//UNITS\nexport const UNIT_MILLIMETER = 'mm';\nexport const UNIT_CENTIMETER = 'cm';\nexport const UNIT_METER = 'm';\nexport const UNIT_INCH = 'in';\nexport const UNIT_FOOT = 'ft';\nexport const UNIT_MILE = 'mi';\n\nexport const UNITS_LENGTH = [\n  UNIT_MILLIMETER,\n  UNIT_CENTIMETER,\n  UNIT_METER,\n  UNIT_INCH,\n  UNIT_FOOT,\n  UNIT_MILE\n];\n\nexport const EPSILON = 1e-6;\n\nexport const KEYBOARD_BUTTON_CODE = {\n  DELETE: 46,\n  BACKSPACE: 8,\n  ESC: 27,\n  Z: 90,\n  ALT: 18,\n  C: 67,\n  V: 86,\n  CTRL: 17,\n  ENTER: 13,\n  TAB: 9\n};\n","/** @description Determines the distance between two points\n *  @param {number} x0 Vertex 0 x\n *  @param {number} y0 Vertex 0 y\n *  @param {number} x1 Vertex 1 x\n *  @param {number} y1 Vertex 1 y\n *  @return {number}\n */\nimport {toFixedFloat, fAbs} from './math.js';\nimport {EPSILON} from '../constants';\n\nexport function compareVertices(v0, v1) {\n  return v0.x === v1.x ? v0.y - v1.y : v0.x - v1.x;\n}\n\nexport function minVertex(v0, v1) {\n  return compareVertices(v0, v1) > 0 ? v1 : v0;\n}\n\nexport function maxVertex(v0, v1) {\n  return compareVertices(v0, v1) > 0 ? v0 : v1;\n}\n\nexport function orderVertices(vertices) {\n  return vertices.sort(compareVertices);\n}\n\nexport function pointsDistance(x0, y0, x1, y1) {\n  let diff_x = x0 - x1;\n  let diff_y = y0 - y1;\n\n  return Math.sqrt((diff_x * diff_x) + (diff_y * diff_y));\n}\n\nexport function verticesDistance(v1, v2) {\n\n  let {x: x0, y: y0} = v1;\n  let {x: x1, y: y1} = v2;\n\n  return pointsDistance(x0, y0, x1, y1);\n}\n\nexport function horizontalLine(y) {\n  return {a: 0, b: 1, c: -y};\n}\n\nexport function verticalLine(x) {\n  return {a: 1, b: 0, c: -x};\n}\n\nexport function linePassingThroughTwoPoints(x1, y1, x2, y2) {\n  if (x1 === x2 && y1 == y2) throw new Error('Geometry error');\n  if (x1 === x2) return verticalLine(x1);\n  if (y1 === y2) return horizontalLine(y1);\n\n  return {\n    a: y1 - y2,\n    b: x2 - x1,\n    c: y2 * x1 - x2 * y1\n  };\n}\n\nexport function distancePointFromLine(a, b, c, x, y) {\n  //https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n  return fAbs(a * x + b * y + c) / Math.sqrt(a * a + b * b);\n}\n\nexport function closestPointFromLine(a, b, c, x, y) {\n  //https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n  let denom = a * a + b * b;\n  return {\n    x: (b * (b * x - a * y) - a * c) / denom,\n    y: ((a * -b * x + a * y) - b * c) / denom,\n  }\n}\n\n/** @description Get point of intersection between two lines using ax+by+c line's equation\n *  @param {number} a x coefficent of first line\n *  @param {number} b y coefficent of first line\n *  @param {number} c costant of first line\n *  @param {number} j x coefficent of second line\n *  @param {number} k y coefficent of second line\n *  @param {number} l costant of second line\n *  @return {object} {x,y} point's coordinates\n */\nexport function twoLinesIntersection(a, b, c, j, k, l) {\n  let angularCoefficientsDiff = (b * j - a * k);\n\n  if (angularCoefficientsDiff === 0) return undefined; //no intersection\n\n  let y = (a * l - c * j) / angularCoefficientsDiff;\n  let x = (c * k - b * l) / angularCoefficientsDiff;\n  return {x, y};\n}\n\nexport function twoLineSegmentsIntersection(p1, p2, p3, p4) {\n  //https://github.com/psalaets/line-intersect/blob/master/lib/check-intersection.js\n\n  let {x: x1, y: y1} = p1;\n  let {x: x2, y: y2} = p2;\n  let {x: x3, y: y3} = p3;\n  let {x: x4, y: y4} = p4;\n\n  let denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n  let numA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n  let numB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n  if (fAbs(denom) <= EPSILON) {\n    if (fAbs(numA) <= EPSILON && fAbs(numB) <= EPSILON) {\n\n      let comparator = (pa, pb) => pa.x === pb.x ? pa.y - pb.y : pa.x - pb.x;\n      let line0 = [p1, p2].sort(comparator);\n      let line1 = [p3.toJS(), p4.toJS()].sort(comparator);\n\n      let [lineSX, lineDX] = [line0, line1].sort((lineA, lineB) => comparator(lineA[0], lineB[0]));\n\n      if (lineSX[1].x === lineDX[0].x) {\n        return {type: (lineDX[0].y <= lineSX[1].y) ? 'colinear' : 'none'};\n      } else {\n        return {type: (lineDX[0].x <= lineSX[1].x) ? 'colinear' : 'none'};\n      }\n    }\n    return {type: 'parallel'};\n  }\n\n  let uA = numA / denom;\n  let uB = numB / denom;\n\n  if (uA >= (0 - EPSILON) && uA <= (1 + EPSILON) && uB >= (0 - EPSILON) && uB <= (1 + EPSILON)) {\n    let point = {\n      x: x1 + (uA * (x2 - x1)),\n      y: y1 + (uA * (y2 - y1))\n    };\n    return {type: 'intersecting', point};\n  }\n\n  return {type: 'none'};\n}\n\nexport function distancePointFromLineSegment(x1, y1, x2, y2, xp, yp) {\n  //http://stackoverflow.com/a/6853926/1398836\n\n  let A = xp - x1;\n  let B = yp - y1;\n  let C = x2 - x1;\n  let D = y2 - y1;\n\n  let dot = A * C + B * D;\n  let len_sq = C * C + D * D;\n  let param = -1;\n  if (len_sq != 0) //in case of 0 length line\n    param = dot / len_sq;\n\n  let xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  let dx = xp - xx;\n  let dy = yp - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n *\n * @param x1 {number} x for first vertex of the segment\n * @param y1 {number} y for first vertex of the segment\n * @param x2 {number} x for second vertex of the segment\n * @param y2 {number} y for second vertex of the segment\n * @param xp {number} x for point we want to verify\n * @param yp {number} y for point we want to verify\n * @param maxDistance {number} the epsilon value used for comparisons\n * @returns {boolean} true if the point lies on the line segment false otherwise\n */\nexport function isPointOnLineSegment(x1, y1, x2, y2, xp, yp, maxDistance = EPSILON) {\n  return distancePointFromLineSegment(x1, y1, x2, y2, xp, yp) <= maxDistance;\n}\n\nexport function closestPointFromLineSegment(x1, y1, x2, y2, xp, yp) {\n  if (x1 === x2) return {x: x1, y: yp};\n  if (y1 === y2) return {x: xp, y: y1};\n\n  let m = (y2 - y1) / (x2 - x1);\n  let q = y1 - m * x1;\n\n  let mi = -1 / m;\n  let qi = yp - mi * xp;\n\n  let x = (qi - q) / (m - mi);\n  let y = (m * x + q);\n\n  return {x, y};\n}\n\nexport function pointPositionOnLineSegment(x1, y1, x2, y2, xp, yp) {\n  let length = pointsDistance(x1, y1, x2, y2);\n  let distance = pointsDistance(x1, y1, xp, yp);\n\n  let offset = distance / length;\n  if (x1 > x2) offset = mapRange(offset, 0, 1, 1, 0);\n\n  return offset;\n}\n\nexport function mapRange(value, low1, high1, low2, high2) {\n  return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\nexport function angleBetweenTwoPointsAndOrigin(x1, y1, x2, y2) {\n  return -(Math.atan2(y1 - y2, x2 - x1)) * 180 / Math.PI;\n}\n\nexport function angleBetweenTwoPoints(x1, y1, x2, y2) {\n  return Math.atan2(y2 - y1, x2 - x1);\n}\n\nexport function absAngleBetweenTwoPoints(x1, y1, x2, y2) {\n  return Math.atan2(Math.abs(y2 - y1), Math.abs(x2 - x1));\n}\n\nexport function samePoints({x: x1, y: y1}, {x: x2, y: y2}) {\n  return fAbs(x1 - x2) <= EPSILON && fAbs(y1 - y2) <= EPSILON;\n}\n\n/** @description Extend line based on coordinates and new line length\n *  @param {number} x1 Vertex 1 x\n *  @param {number} y1 Vertex 1 y\n *  @param {number} x2 Vertex 2 x\n *  @param {number} y2 Vertex 2 y\n *  @param {number} newDistance New line length\n *  @return {object}\n */\nexport function extendLine(x1, y1, x2, y2, newDistance, precision = 6) {\n  let rad = angleBetweenTwoPoints( x1, y1, x2, y2 );\n\n  return {\n    x: toFixedFloat(x1 + (Math.cos(rad) * newDistance), precision),\n    y: toFixedFloat(y1 + (Math.sin(rad) * newDistance), precision),\n  };\n}\n\nexport function roundVertex(vertex, precision = 6) {\n  vertex.set('x', toFixedFloat(vertex.get('x'), precision));\n  vertex.set('y', toFixedFloat(vertex.get('y'), precision));\n\n  return vertex;\n}\n\n//https://github.com/MartyWallace/PolyK\nexport function ContainsPoint(polygon, pointX, pointY) {\n  let n = polygon.length >> 1;\n\n  let ax, lup;\n  let ay = polygon[2 * n - 3] - pointY;\n  let bx = polygon[2 * n - 2] - pointX;\n  let by = polygon[2 * n - 1] - pointY;\n\n  if (bx === 0 && by === 0) return false; // point on edge\n\n  // let lup = by > ay;\n  for (let ii = 0; ii < n; ii++) {\n    ax = bx;\n    ay = by;\n    bx = polygon[2 * ii] - pointX;\n    by = polygon[2 * ii + 1] - pointY;\n    if (bx === 0 && by === 0) return false; // point on edge\n    if (ay === by) continue;\n    lup = by > ay;\n  }\n\n  let depth = 0;\n  for (let i = 0; i < n; i++) {\n    ax = bx;\n    ay = by;\n    bx = polygon[2 * i] - pointX;\n    by = polygon[2 * i + 1] - pointY;\n    if (ay < 0 && by < 0) continue;  // both 'up' or both 'down'\n    if (ay > 0 && by > 0) continue;  // both 'up' or both 'down'\n    if (ax < 0 && bx < 0) continue;   // both points on the left\n\n    if (ay === by && Math.min(ax, bx) < 0) return true;\n    if (ay === by) continue;\n\n    let lx = ax + (bx - ax) * (-ay) / (by - ay);\n    if (lx === 0) return false;      // point on edge\n    if (lx > 0) depth++;\n    if (ay === 0 && lup && by > ay) depth--;  // hit vertex, both up\n    if (ay === 0 && !lup && by < ay) depth--; // hit vertex, both down\n    lup = by > ay;\n  }\n  return (depth & 1) === 1;\n}\n\nexport function cosWithThreshold(alpha, threshold) {\n  let cos = Math.cos(alpha);\n  return cos < threshold ? 0 : cos;\n}\n\nexport function sinWithThreshold(alpha, threshold) {\n  let sin = Math.sin(alpha);\n  return sin < threshold ? 0 : sin;\n}\n\nexport function midPoint( x1, y1, x2, y2 ) {\n  return { x: (x1+x2)/2, y: (y1+y2)/2 };\n}\n\nexport function verticesMidPoint( verticesArray ) {\n  let res = verticesArray.reduce( ( incr, vertex ) => { return { x: incr.x + vertex.x, y: incr.y + vertex.y } }, { x: 0, y: 0 });\n  return { x: res.x / verticesArray.length, y: res.y / verticesArray.length };\n}\n\nexport function rotatePointAroundPoint( px, py, ox, oy, theta ) {\n\n  let thetaRad = theta * Math.PI / 180;\n\n  let cos = Math.cos( thetaRad );\n  let sin = Math.sin( thetaRad );\n\n  let deltaX = px - ox;\n  let deltaY = py - oy;\n\n  return {\n    x: cos * deltaX - sin * deltaY + ox,\n    y: sin * deltaX + cos * deltaY + oy\n  };\n\n}\n","import PropTypes from 'prop-types'\nimport {\n  angleBetweenTwoPointsAndOrigin, pointsDistance, samePoints\n} from  '../../utils/geometry'\n\nexport default function Line({id, x1, y1, x2, y2, selected}) {\n  const height = 5\n  const enableSnap = false\n\n  if (samePoints({x: x1, y: y1}, {x: x2, y: y2})) return null\n\n  if (enableSnap) {\n    const distance = 10\n    if (x2 < (x1 + distance) && x2 > (x1 - distance)) {\n      x2 = x1\n    }\n    if (y2 < (y1 + distance) && y2 > (y1 - distance)) {\n      y2 = y1\n    }\n  }\n\n  let length = pointsDistance(x1, y1, x2, y2)\n  let angle = angleBetweenTwoPointsAndOrigin(x1, y1, x2, y2);\n\n  let pos = 'left'\n  if (angle > -90 && angle < 90) {\n    pos = 'right'\n  }\n  const transX = (val) => {\n    if ('left' === pos) {\n      return -val\n    }\n    return val\n  }\n\n  return (\n    <g opacity=\"1\">\n      <g transform={`translate(${x1}, ${y1}) rotate(${angle}, 0, 0)`} data-element-root=\"true\" data-prototype=\"lines\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        {/* the ruler */}\n        {selected && <g transform={`translate(0,${'left' === pos ? (height / 2) + 10 : -((height / 2) + 10)})${'left' === pos ? 'rotate(180,0,0)' : ''}`}>\n          <text x={transX(length / 2)} y=\"-3\" transform=\"scale(1, 1)\" style={{textAnchor: 'middle', fontSize: 12, pointerEvents: 'none', fontWeight: 'bold', userSelect: 'none'}}>{length.toFixed(2)} cm</text>\n          <line x1=\"0\" y1=\"-5\" x2=\"0\" y2=\"5\" style={{stroke: 'rgb(0, 150, 253)', strokeWidth: 1}}></line>\n          <line x1={transX(length)} y1=\"-5\" x2={transX(length)} y2=\"5\" style={{stroke: 'rgb(0, 150, 253)', strokeWidth: 1}}></line>\n          <line x1=\"0\" y1=\"0\" x2={transX(length)} y2=\"0\" style={{stroke: 'rgb(0, 150, 253)', strokeWidth: 1}}></line>\n        </g>}\n\n        {/* the line */}\n        <g>\n          <rect x=\"0\" y={-(height / 2)} width={length} height={height} style={{strokeWidth: 1, stroke: selected ? 'rgb(153, 195, 251)' : 'none', fill: '#888'}}></rect>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nLine.propTypes = {\n  id: PropTypes.string.isRequired,\n  x1: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  selected: PropTypes.bool,\n}\n\nLine.defaultProps = {\n  selected: true,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Square({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"RectanglefRWys_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"RectanglefRWys\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,295.5,156.5)\" rx={0} ry={0} opacity={1} aria-label=\"RectanglefRWys\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"RectanglefRWys_content_groupElement\">\n            <rect id=\"RectanglefRWys_content\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,295.5,156.5)\" rx={0} ry={0} opacity={1} aria-label=\"RectanglefRWys\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nSquare.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  selected: PropTypes.bool,\n}\n\nSquare.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/**\n * processPathData method \\\n *\n * @returns {Object[]} processPathData method .\\\n * @param { string } data - provide the data  value.\n * @private\n */\nexport function processPathData(data) {\n  var collection = [];\n  var j;\n  var arrayCollection = parsePathData(data);\n  if (arrayCollection.length > 0) {\n    for (var i = 0; i < arrayCollection.length; i++) {\n      var ob = arrayCollection[i];\n      var char = '';\n      char = ob[0];\n      switch (char.toLowerCase()) {\n        case 'm':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n            j = j + 1;\n            if (char === 'm') {\n              char = 'l';\n            }\n            else if (char === 'M') {\n              char = 'L';\n            }\n          }\n          break;\n        case 'l':\n        case 't':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n            j = j + 1;\n          }\n          break;\n        case 'h':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({ command: char, x: ob[j] });\n          }\n          break;\n        case 'v':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({ command: char, y: ob[j] });\n          }\n          break;\n        case 'z':\n          collection.push({ command: char });\n          break;\n        case 'c':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({\n              command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n            });\n            j = j + 5;\n          }\n          break;\n        case 's':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n            j = j + 3;\n          }\n          break;\n        case 'q':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n            j = j + 3;\n          }\n          break;\n        case 'a':\n          for (j = 1; j < ob.length; j++) {\n            collection.push({\n              command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n              sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n            });\n            j = j + 6;\n          }\n          break;\n        default: break\n      }\n    }\n  }\n  return collection;\n}\n\n/**\n * parsePathData method \\\n *\n * @returns {Object[]} parsePathData method .\\\n * @param { string } data - provide the data  value.\n * @private\n */\nexport function parsePathData(data) {\n  var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n  var current = [];\n  var commands = [];\n  var match = {};\n  tokenizer.lastIndex = 0;\n  var isExponential = false;\n  match = tokenizer.exec(data);\n  while (match) {\n    if (match[1] === 'e') {\n      //let s1: string = '';\n      isExponential = true;\n    }\n    else if (match[1]) {\n      if (match[1].toLowerCase() === 'zm') {\n        if (current.length) {\n          commands.push(current);\n        }\n        commands.push(['Z']);\n        current = [match[1].substring(1, 2)];\n      }\n      else {\n        if (current.length) {\n          commands.push(current);\n        }\n        current = [match[1]];\n      }\n      isExponential = false;\n    }\n    else {\n      if (!current.length) {\n        current = [];\n      }\n      if (!isExponential) {\n        current.push(Number(match[2]));\n      }\n      isExponential = false;\n    }\n    match = tokenizer.exec(data);\n  }\n  if (current.length) {\n    commands.push(current);\n  }\n  return commands;\n}\n\n/**\n * splitArrayCollection method \\\n *\n * @returns {Object[]} splitArrayCollection method .\\\n * @param { Object[]} arrayCollection - provide the val  value.\n * @private\n */\nexport function splitArrayCollection(arrayCollection) {\n  var x0;\n  var y0;\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x;\n  var y;\n  var length;\n  var i;\n  for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n    var path = arrayCollection[i];\n    var seg = path;\n    var char = seg.command;\n    if (/[MLHVCSQTA]/.test(char)) {\n      if ('x' in seg) {\n        seg.x = x = seg.x;\n      }\n      if ('y' in seg) {\n        seg.y = y = seg.y;\n      }\n    }\n    else {\n      if ('x1' in seg) {\n        seg.x1 = x1 = x + seg.x1;\n      }\n      if ('x2' in seg) {\n        seg.x2 = x2 = x + seg.x2;\n      }\n      if ('y1' in seg) {\n        seg.y1 = y1 = y + seg.y1;\n      }\n      if ('y2' in seg) {\n        seg.y2 = y2 = y + seg.y2;\n      }\n      if ('x' in seg) {\n        seg.x = x += seg.x;\n      }\n      if ('y' in seg) {\n        seg.y = y += seg.y;\n      }\n      var newSeg = void 0;\n      switch (char) {\n        case 'm':\n        case 'M':\n          newSeg = { command: 'M', x: x, y: y };\n          break;\n        case 'l':\n        case 'L':\n          newSeg = { command: 'L', x: x, y: y };\n          break;\n        case 'h':\n        case 'H':\n          newSeg = { command: 'H', x: x };\n          break;\n        case 'v':\n        case 'V':\n          newSeg = { command: 'V', y: y };\n          break;\n        case 'c':\n        case 'C':\n          newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n          break;\n        case 's':\n        case 'S':\n          newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n          break;\n        case 'q':\n        case 'Q':\n          newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n          break;\n        case 't':\n        case 'T':\n          newSeg = { command: 'T', x: x, y: y };\n          break;\n        case 'a':\n        case 'A':\n          newSeg = { command: 'A', x: x, y: y };\n          newSeg.r1 = seg.r1;\n          newSeg.r2 = seg.r2;\n          newSeg.angle = seg.angle;\n          newSeg.largeArc = seg.largeArc;\n          newSeg.sweep = seg.sweep;\n          break;\n        case 'z':\n        case 'Z':\n          newSeg = { command: 'Z' };\n          x = x0;\n          y = y0;\n          newSeg = arrayCollection[i];\n          break;\n        default: break\n      }\n      if (newSeg) {\n        arrayCollection[i] = newSeg;\n      }\n    }\n    if (char === 'M' || char === 'm') {\n      x0 = x;\n      y0 = y;\n    }\n  }\n  return arrayCollection;\n}\n\n/**\n * transformPath method \\\n *\n * @returns {string} transformPath method .\\\n * @param { Object[]} arr - provide the collection  value.\n * @param { number} sX - provide the collection  value.\n * @param { number} sY - provide the collection  value.\n * @param { boolean} s - provide the collection  value.\n * @param {number} bX - provide the collection  value.\n * @param { number} bY - provide the collection  value.\n * @param { number} iX - provide the collection  value.\n * @param { number} iY - provide the collection  value.\n * @private\n */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n  var x0;\n  var y0;\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x;\n  var y;\n  var length;\n  var i;\n  var newSeg;\n  for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n    var obj = arr[i];\n    var seg = obj;\n    var char = seg.command;\n    if ('x' in seg) {\n      x = seg.x;\n    }\n    if ('y' in seg) {\n      y = seg.y;\n    }\n    if ('y1' in seg) {\n      y1 = seg.y1;\n    }\n    if ('y2' in seg) {\n      y2 = seg.y2;\n    }\n    if ('x1' in seg) {\n      x1 = seg.x1;\n    }\n    if ('x2' in seg) {\n      x2 = seg.x2;\n    }\n    if (s) {\n      if (x !== undefined) {\n        x = scalePathData(x, sX, bX, iX);\n      }\n      if (y !== undefined) {\n        y = scalePathData(y, sY, bY, iY);\n      }\n      if (x1 !== undefined) {\n        x1 = scalePathData(x1, sX, bX, iX);\n      }\n      if (y1 !== undefined) {\n        y1 = scalePathData(y1, sY, bY, iY);\n      }\n      if (x2 !== undefined) {\n        x2 = scalePathData(x2, sX, bX, iX);\n      }\n      if (y2 !== undefined) {\n        y2 = scalePathData(y2, sY, bY, iY);\n      }\n    }\n    else {\n      if (x !== undefined) {\n        x = Number((x + sX).toFixed(2));\n      }\n      if (y !== undefined) {\n        y = Number((y + sY).toFixed(2));\n      }\n      if (x1 !== undefined) {\n        x1 = Number((x1 + sX).toFixed(2));\n      }\n      if (y1 !== undefined) {\n        y1 = Number((y1 + sY).toFixed(2));\n      }\n      if (x2 !== undefined) {\n        x2 = Number((x2 + sX).toFixed(2));\n      }\n      if (y2 !== undefined) {\n        y2 = Number((y2 + sY).toFixed(2));\n      }\n    }\n    var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n    newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n    if (newSeg) {\n      arr[i] = newSeg;\n    }\n    // Record the start of a subpath\n    if (char === 'M' || char === 'm') {\n      x0 = x;\n      y0 = y;\n    }\n  }\n  var pathData = getPathString(arr);\n  return pathData;\n}\n\n/**\n * scalePathData method \\\n *\n * @returns {string} scalePathData method .\\\n * @param { number} val - provide the val  value.\n * @param { number} scaleFactor - provide the scaleFactor  value.\n * @param { number} oldOffset - provide the oldOffset  value.\n * @param { number} newOffset - provide the newOffset  value.\n * @private\n */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n  if (val !== oldOffset) {\n    if (newOffset !== oldOffset) {\n      val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n          + (newOffset - Number(oldOffset)));\n    }\n    else {\n      val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n    }\n  }\n  else {\n    if (newOffset !== oldOffset) {\n      val = newOffset;\n    }\n  }\n  return Number(val.toFixed(2));\n}\n\n/**\n * updatedSegment method \\\n *\n * @returns {string} updatedSegment method .\\\n * @param { PathSegment} segment - provide the collection  value.\n * @param { PathSegment} char - provide the collection  value.\n * @param { number} obj - provide the collection  value.\n * @param { boolean} isScale - provide the collection  value.\n * @param {number} sX - provide the collection  value.\n * @param { number} sY - provide the collection  value.\n * @private\n */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n  switch (char) {\n    case 'M':\n      segment.x = obj.x;\n      segment.y = obj.y;\n      break;\n    case 'L':\n      segment.x = obj.x;\n      segment.y = obj.y;\n      break;\n    case 'H':\n      segment.x = obj.x;\n      break;\n    case 'V':\n      segment.y = obj.y;\n      break;\n    case 'C':\n      segment.x = obj.x;\n      segment.y = obj.y;\n      segment.x1 = obj.x1;\n      segment.y1 = obj.y1;\n      segment.x2 = obj.x2;\n      segment.y2 = obj.y2;\n      break;\n    case 'S':\n      segment.x = obj.x;\n      segment.y = obj.y;\n      segment.x2 = obj.x2;\n      segment.y2 = obj.y2;\n      break;\n    case 'Q':\n      segment.x = obj.x;\n      segment.y = obj.y;\n      segment.x1 = obj.x1;\n      segment.y1 = obj.y1;\n      break;\n    case 'T':\n      segment.x = obj.x;\n      segment.y = obj.y;\n      break;\n    case 'A':\n      var r1 = obj.r1;\n      var r2 = obj.r2;\n      if (isScale) {\n        obj.r1 = r1 = (r1 * sX);\n        obj.r2 = r2 = (r2 * sY);\n      }\n      segment.x = obj.x;\n      segment.y = obj.y;\n      segment.r1 = obj.r1;\n      segment.r2 = obj.r2;\n      break;\n    case 'z':\n    case 'Z':\n      segment = { command: 'Z' };\n      break;\n    default: break\n  }\n  return segment;\n}\n\n/**\n * getPathString method \\\n *\n * @returns {string} getPathString method .\\\n * @param { Object[]} arrayCollection - provide the val  value.\n * @private\n */\nexport function getPathString(arrayCollection) {\n  var getNewString = '';\n  var i;\n  for (i = 0; i < arrayCollection.length; i++) {\n    if (i === 0) {\n      getNewString += getString(arrayCollection[i]);\n    }\n    else {\n      getNewString += ' ' + getString(arrayCollection[i]);\n    }\n  }\n  return getNewString;\n}\n\n/**\n * getString method \\\n *\n * @returns {string} getString method .\\\n * @param { PathSegment} arrayCollection - provide the val  value.\n * @private\n */\nexport function getString(obj) {\n  var string = '';\n  switch (obj.command) {\n    case 'Z':\n    case 'z':\n      string = obj.command;\n      break;\n    case 'M':\n    case 'm':\n    case 'L':\n    case 'l':\n      string = obj.command + ' ' + obj.x + ' ' + obj.y;\n      break;\n    case 'C':\n    case 'c':\n      string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n      break;\n    case 'Q':\n    case 'q':\n      string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n      break;\n    case 'A':\n    case 'a':\n      var cmd = obj.command;\n      var ang = obj.angle;\n      var l = (obj.largeArc ? '1' : '0');\n      var s = (obj.sweep ? '1' : '0');\n      string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n      break;\n    case 'H':\n    case 'h':\n      string = obj.command + ' ' + obj.x;\n      break;\n    case 'V':\n    case 'v':\n      string = obj.command + ' ' + obj.y;\n      break;\n    case 'S':\n    case 's':\n      string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n      break;\n    case 'T':\n    case 't':\n      string = obj.command + ' ' + obj.x + ' ' + obj.y;\n      break\n    default: break\n  }\n  return string;\n}\n\n/**\n * pathSegmentCollection method \\\n *\n * @returns {string} pathSegmentCollection method .\\\n * @param { Object[]} collection - provide the collection  value.\n * @private\n */\nexport function pathSegmentCollection(collection) {\n  var x0;\n  var y0;\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x;\n  var y;\n  var length;\n  var i;\n  var initx;\n  var inity;\n  var segments = [];\n  for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n    var obj = collection[i];\n    var seg = obj;\n    var char = '';\n    char = seg.command;\n    if ('y1' in seg) {\n      y1 = seg.y1;\n    }\n    if ('y2' in seg) {\n      y2 = seg.y2;\n    }\n    if ('x1' in seg) {\n      x1 = seg.x1;\n    }\n    if ('x2' in seg) {\n      x2 = seg.x2;\n    }\n    if ('x' in seg) {\n      x = seg.x;\n    }\n    if ('y' in seg) {\n      y = seg.y;\n    }\n    var prev = segments[segments.length - 1];\n    switch (char) {\n      case 'M':\n        segments.push({ command: 'M', x: x, y: y });\n        break;\n      case 'L':\n        segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n        break;\n      case 'H':\n        segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n        break;\n      case 'V':\n        segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n        break;\n      case 'C':\n        segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n        break;\n      case 'S':\n        if (prev) {\n          var ctrl = void 0;\n          if (prev.command === 'C' || prev.command === 'S') {\n            ctrl = { x: prev.x2, y: prev.y2 };\n          }\n          else {\n            ctrl = { x: x0, y: y0 };\n          }\n          var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n          segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n        }\n        break;\n      case 'Q':\n          //ctx.quadraticCurveTo(x1, y1, x, y);\n        segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n        break;\n      case 'T':\n        if (prev) {\n          var ctrl = void 0;\n          if (prev.command === 'Q') {\n            ctrl = { x: prev.x1, y: prev.y1 };\n          }\n          else {\n            ctrl = { x: x0, y: y0 };\n          }\n          var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n          segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n        }\n        break;\n      case 'A':\n        var newSeg = seg;\n        newSeg.command = 'A';\n        segments.push(newSeg);\n        break;\n      case 'Z':\n      case 'z':\n        segments.push({ command: 'Z' });\n        x = x0;\n        y = y0;\n        break;\n      default: break\n    }\n    if (char === 'M' || char === 'm') {\n      initx = x;\n      inity = y;\n    }\n    x0 = x;\n    y0 = y;\n  }\n  return segments;\n}\n","/**\n* Draw the path element for the diagram\\\n*\n*  @returns {void}  Draw the path element for the diagram .\\\n*\n*  @param { SVGElement} svg - Provide the SVG element .\n*  @param {PathAttributes} options - Provide the path element attributes .\n*  @param {Object[]} collection - Provide the parent SVG element .\n*  @private\n*/\nexport function renderPath(svg, options, collection) {\n  var x1;\n  var y1;\n  var x2;\n  var y2;\n  var x;\n  var y;\n  var length;\n  var i;\n  var segments = collection;\n  var d = '';\n  for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n    var obj = segments[i];\n    var segment = obj;\n    var char = segment.command;\n    if ('x1' in segment) {\n      x1 = segment.x1;\n    }\n    if ('x2' in segment) {\n      x2 = segment.x2;\n    }\n    if ('y1' in segment) {\n      y1 = segment.y1;\n    }\n    if ('y2' in segment) {\n      y2 = segment.y2;\n    }\n    if ('x' in segment) {\n      x = segment.x;\n    }\n    if ('y' in segment) {\n      y = segment.y;\n    }\n    switch (char) {\n      case 'M':\n        d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n        break;\n      case 'L':\n        d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n        break;\n      case 'C':\n        d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n        d += x.toString() + ',' + y.toString() + ' ';\n        break;\n      case 'Q':\n        d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n        break;\n      case 'A':\n        d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n        d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n        break;\n      case 'Z':\n      case 'z':\n        d = d + 'Z' + ' ';\n        break;\n      default: break\n    }\n  }\n  svg.setAttribute('d', d);\n};\n","import PropTypes from 'prop-types'\nimport { useRef } from 'react'\nimport { processPathData, splitArrayCollection, transformPath, getPathString, pathSegmentCollection } from '../../utils/path'\nimport { renderPath } from '../../utils/svg-renderer'\n\nexport default function Circle({id, x, y, width, height, selected}) {\n  const ref = useRef()\n  if (ref.current) {\n    const node = ref.current\n    const d = node.attributes.getNamedItem('d').value\n    const bounds = node.getBBox()\n    const newPath = updatePath(d, bounds, {width, height})\n    let collection\n    collection = processPathData(newPath)\n    collection = pathSegmentCollection(collection)\n    renderPath(node, null, collection)\n  }\n\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"EllipseGtQ4N_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"EllipseGtQ4N\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,276.5,206.5)\" rx={0} ry={0} opacity={1} aria-label=\"EllipseGtQ4N\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"EllipseGtQ4N_content_groupElement\">\n            <path ref={ref} transform={`rotate(0,276.5,206.5)translate(${x-(width/2)},${y-(height/2)})`}\n              d={`M100,50 C100,77.61,77.61,100,50,100 C22.39,100,0,77.61,0,50 C0,22.39,22.39,0,50,0 C77.61,0,100,22.39,100,50 Z`} id=\"EllipseGtQ4N_content\" visibility=\"visible\" opacity={1} aria-label=\"EllipseGtQ4N\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nfunction updatePath(pathData, bounds, actualSize) {\n  var _transformPath = true\n  var _isDirt = true\n  var isScale = false;\n  var newPathString = '';\n  var scaleX = -bounds.x;\n  var scaleY = -bounds.y;\n  var arrayCollection = [];\n  if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n    scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n    scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n    isScale = true;\n  }\n  arrayCollection = processPathData(pathData);\n  arrayCollection = splitArrayCollection(arrayCollection);\n  if ((isScale || _isDirt) && _transformPath) {\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n  }\n  else {\n    newPathString = getPathString(arrayCollection);\n  }\n  isScale = false;\n  return newPathString;\n}\n\nCircle.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  selected: PropTypes.bool,\n}\n\nCircle.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Hexagon({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"HexagonqOT0G_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"HexagonqOT0G\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,254.5,144.5)\" rx={0} ry={0} opacity={1} aria-label=\"HexagonqOT0G\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"HexagonqOT0G_content_groupElement\">\n            <path transform={`rotate(0,254.5,144.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M33.33,0 L66.67,0 L100,50 L66.67,100 L33.33,100 L0,50 L33.33,0 Z \" id=\"HexagonqOT0G_content\" visibility=\"visible\" opacity={1} aria-label=\"HexagonqOT0G\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nHexagon.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  selected: PropTypes.bool,\n}\n\nHexagon.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Parallelogram({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"ParallelogramFryUc_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"ParallelogramFryUc\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,497.5,112.5)\" rx={0} ry={0} opacity={1} aria-label=\"ParallelogramFryUc\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"ParallelogramFryUc_content_groupElement\">\n            <path transform={`rotate(0,497.5,112.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M33.33,0 L100,0 L66.67,100 L0,100 Z \" id=\"ParallelogramFryUc_content\" visibility=\"visible\" opacity={1} aria-label=\"ParallelogramFryUc\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nParallelogram.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nParallelogram.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Triangle({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"TrianglenfSW2_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"TrianglenfSW2\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,457.5,209.5)\" rx={0} ry={0} opacity={1} aria-label=\"TrianglenfSW2\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"TrianglenfSW2_content_groupElement\">\n            <path transform={`rotate(0,457.5,209.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M50,0 L100,100 L0,100 L50,0 Z \" id=\"TrianglenfSW2_content\" visibility=\"visible\" opacity={1} aria-label=\"TrianglenfSW2\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nTriangle.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nTriangle.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Plus({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"PlusNedbh_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"PlusNedbh\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,301.5,305.5)\" rx={0} ry={0} opacity={1} aria-label=\"PlusNedbh\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"PlusNedbh_content_groupElement\">\n            <path transform={`rotate(0,301.5,305.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M100,36.33 L63.67,36.33 L63.67,0 L36.33,0 L36.33,36.33 L0,36.33 L0,63.66 L36.33,63.66 L36.33,100 L63.67,100 L63.67,63.66 L100,63.66 L100,36.33 Z \" id=\"PlusNedbh_content\" visibility=\"visible\" opacity={1} aria-label=\"PlusNedbh\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nPlus.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nPlus.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\nimport { useRef } from 'react'\nimport { processPathData, splitArrayCollection, transformPath, getPathString, pathSegmentCollection } from '../../utils/path'\nimport { renderPath } from '../../utils/svg-renderer'\n\nexport default function Star({id, x, y, width, height, selected}) {\n  const ref = useRef()\n  if (ref.current) {\n    const node = ref.current\n    const d = node.attributes.getNamedItem('d').value\n    const bounds = node.getBBox()\n    const newPath = updatePath(d, bounds, {width, height})\n    let collection\n    collection = processPathData(newPath)\n    collection = pathSegmentCollection(collection)\n    renderPath(node, null, collection)\n  }\n\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"StariHes9_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"StariHes9\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,670.5,379.5)\" rx=\"0\" ry=\"0\" opacity=\"1\" aria-label=\"StariHes9\" stroke=\"transparent\" strokeWidth=\"0\" strokeDasharray=\"none\" fill=\"transparent\"></rect>\n          <g id=\"StariHes9_content_groupElement\">\n            <path ref={ref} transform={`rotate(0,670.5,379.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M50,0 L60.72,38.15 L100,38.2 L67.35,59.59 L80.9,100 L50,72.84 L19.1,100 L32.65,59.59 L0,38.2 L39.28,38.15 L50,0 Z \" id=\"StariHes9_content\" visibility=\"visible\" opacity=\"1\" aria-label=\"StariHes9\" stroke=\"#3A3A3A\" strokeWidth=\"2\" strokeDasharray=\"none\" fill=\"white\"></path>\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nfunction updatePath(pathData, bounds, actualSize) {\n  var _transformPath = true\n  var _isDirt = true\n  var isScale = false;\n  var newPathString = '';\n  var scaleX = -bounds.x;\n  var scaleY = -bounds.y;\n  var arrayCollection = [];\n  if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n    scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n    scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n    isScale = true;\n  }\n  arrayCollection = processPathData(pathData);\n  arrayCollection = splitArrayCollection(arrayCollection);\n  if ((isScale || _isDirt) && _transformPath) {\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n  }\n  else {\n    newPathString = getPathString(arrayCollection);\n  }\n  isScale = false;\n  return newPathString;\n}\n\nStar.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nStar.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Pentagon({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"PentagonHigs1_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"PentagonHigs1\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,312.5,358.5)\" rx=\"0\" ry=\"0\" opacity=\"1\" aria-label=\"PentagonHigs1\" stroke=\"transparent\" strokeWidth=\"0\" strokeDasharray=\"none\" fill=\"transparent\"></rect>\n          <g id=\"PentagonHigs1_content_groupElement\">\n            <path transform={`rotate(0,312.5,358.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M50,0 L100,42.86 L83.33,100 L16.67,100 L0,42.86 L50,0 Z \" id=\"PentagonHigs1_content\" visibility=\"visible\" opacity=\"1\" aria-label=\"PentagonHigs1\" stroke=\"#3A3A3A\" strokeWidth=\"2\" strokeDasharray=\"none\" fill=\"white\"></path>\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nPentagon.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nPentagon.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Heptagon({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"HeptagonL1iQm_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"HeptagonL1iQm\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,106.5,371.5)\" rx=\"0\" ry=\"0\" opacity=\"1\" aria-label=\"HeptagonL1iQm\" stroke=\"transparent\" strokeWidth=\"0\" strokeDasharray=\"none\" fill=\"transparent\"></rect><g id=\"HeptagonL1iQm_content_groupElement\">\n            <path transform={`rotate(0,106.5,371.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M27.75,100 L0,64.31 L9.9,19.81 L50,0 L90.1,19.81 L100,64.31 L72.25,100 L27.75,100 Z \" id=\"HeptagonL1iQm_content\" visibility=\"visible\" opacity=\"1\" aria-label=\"HeptagonL1iQm\" stroke=\"#3A3A3A\" strokeWidth=\"2\" strokeDasharray=\"none\" fill=\"white\"></path>\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nHeptagon.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nHeptagon.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Octagon({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"OctagonluK8c_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"OctagonluK8c\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,261.5,392.5)\" rx=\"0\" ry=\"0\" opacity=\"1\" aria-label=\"OctagonluK8c\" stroke=\"transparent\" strokeWidth=\"0\" strokeDasharray=\"none\" fill=\"transparent\"></rect>\n            <g id=\"OctagonluK8c_content_groupElement\">\n              <path transform={`rotate(0,261.5,392.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M29.29,100 L0,70.71 L0,29.29 L29.29,0 L70.71,0 L100,29.29 L100,70.71 L70.71,100 L29.29,100 Z \" id=\"OctagonluK8c_content\" visibility=\"visible\" opacity=\"1\" aria-label=\"OctagonluK8c\" stroke=\"#3A3A3A\" strokeWidth=\"2\" strokeDasharray=\"none\" fill=\"white\"></path>\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nOctagon.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nOctagon.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Trapezoid({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"TrapezoidstGPf_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"TrapezoidstGPf\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,441.5,422.5)\" rx={0} ry={0} opacity={1} aria-label=\"TrapezoidstGPf\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"TrapezoidstGPf_content_groupElement\">\n            <path transform={`rotate(0,441.5,422.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M76.88,100 L23.12,100 L0,0 L100,0 L76.88,100 Z \" id=\"TrapezoidstGPf_content\" visibility=\"visible\" opacity={1} aria-label=\"TrapezoidstGPf\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nTrapezoid.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nTrapezoid.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Decagon({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"DecagonKQaCO_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"DecagonKQaCO\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,662.5,465.5)\" rx={0} ry={0} opacity={1} aria-label=\"DecagonKQaCO\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"DecagonKQaCO_content_groupElement\">\n            <path transform={`rotate(0,662.5,465.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M34.55,100 L9.55,80.9 L0,50 L9.55,19.1 L34.55,0 L65.45,0 L90.45,19.1 L100,50 L90.45,80.9 L65.45,100 L34.55,100 Z \" id=\"DecagonKQaCO_content\" visibility=\"visible\" opacity={1} aria-label=\"DecagonKQaCO\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nDecagon.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nDecagon.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function RightTriangle({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"RightTrianglekbOaO_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"RightTrianglekbOaO\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,116.5,490.5)\" rx={0} ry={0} opacity={1} aria-label=\"RightTrianglekbOaO\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"RightTrianglekbOaO_content_groupElement\">\n            <path transform={`rotate(0,116.5,490.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M100,100 L0,100 L0,0 L100,100 Z \" id=\"RightTrianglekbOaO_content\" visibility=\"visible\" opacity={1} aria-label=\"RightTrianglekbOaO\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nRightTriangle.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nRightTriangle.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Cylinder({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"CylinderNJgZB_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"CylinderNJgZB\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,335.5,524.5)\" rx={0} ry={0} opacity={1} aria-label=\"CylinderNJgZB\" stroke=\"transparent\" strokeWidth={0} strokeDasharray=\"none\" fill=\"transparent\" />\n          <g id=\"CylinderNJgZB_content_groupElement\">\n            <path transform={`rotate(0,335.5,524.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M100,9.12 C100,14.16,77.61,18.25,50,18.25 C22.39,18.25,0,14.16,0,9.12 L0,90.87 C0,95.91,22.39,100,50,100 C77.61,100,100,95.91,100,90.87 L100,9.13 C100,14.17,77.61,18.14,50,18.14 C22.39,18.14,0,14.05,0,9.01 L0,9.13 C0,4.09,22.39,0,50,0 C77.61,0,100,4.09,100,9.13 \" id=\"CylinderNJgZB_content\" visibility=\"visible\" opacity={1} aria-label=\"CylinderNJgZB\" stroke=\"#3A3A3A\" strokeWidth={2} strokeDasharray=\"none\" fill=\"white\" />\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nCylinder.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nCylinder.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\n\nexport default function Diamond({id, x, y, width, height, selected}) {\n  return (\n    <g opacity=\"1\">\n      <g id=\"diagram_diagramLayer\" data-element-root=\"true\" data-prototype=\"items\" data-id={id} data-selected={selected} data-layer=\"layer-1\">\n        <g id=\"DiamondynePd_groupElement\" transform=\"translate(0,0)\">\n          <rect id=\"DiamondynePd\" x={x-(width/2)} y={y-(height/2)} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,521.5,542.5)\" rx=\"0\" ry=\"0\" opacity=\"1\" aria-label=\"DiamondynePd\" stroke=\"transparent\" strokeWidth=\"0\" strokeDasharray=\"none\" fill=\"transparent\"></rect>\n          <g id=\"DiamondynePd_content_groupElement\">\n            <path transform={`rotate(0,521.5,542.5)translate(${x-(width/2)},${y-(height/2)})`} d=\"M100,50 L50,100 L0,50 L50,0 L100,50 Z \" id=\"DiamondynePd_content\" visibility=\"visible\" opacity=\"1\" aria-label=\"DiamondynePd\" stroke=\"#3A3A3A\" strokeWidth=\"2\" strokeDasharray=\"none\" fill=\"white\"></path>\n          </g>\n        </g>\n      </g>\n    </g>\n  )\n}\n\nDiamond.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n}\n\nDiamond.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","import PropTypes from 'prop-types'\nimport * as types from './constants'\nimport * as Shape from './export'\n\nexport default function renderer({type, ...rest}) {\n  switch (type) {\n    case types.SQUARE:\n      return <Shape.Square {...rest} />\n    case types.CIRCLE:\n      return <Shape.Circle {...rest} />\n    case types.HEXAGON:\n      return <Shape.Hexagon {...rest} />\n    case types.PARALLELOGRAM:\n      return <Shape.Parallelogram {...rest} />\n    case types.TRIANGLE:\n      return <Shape.Triangle {...rest} />\n    case types.PLUS:\n      return <Shape.Plus {...rest} />\n    case types.STAR:\n      return <Shape.Star {...rest} />\n    case types.PENTAGON:\n      return <Shape.Pentagon {...rest} />\n    case types.HEPTAGON:\n      return <Shape.Heptagon {...rest} />\n    case types.OCTAGON:\n      return <Shape.Octagon {...rest} />\n    case types.TRAPEZOID:\n      return <Shape.Trapezoid {...rest} />\n    case types.DECAGON:\n      return <Shape.Decagon {...rest} />\n    case types.RIGHT_TRIANGLE:\n      return <Shape.RightTriangle {...rest} />\n    case types.CYLINDER:\n      return <Shape.Cylinder {...rest} />\n    case types.DIAMOND:\n      return <Shape.Diamond {...rest} />\n    default:\n      return null\n  }\n}\n\nrenderer.propTypes = {\n  type: PropTypes.string.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  selected: PropTypes.bool,\n}\n\nrenderer.defaultProps = {\n  width: 100,\n  height: 100,\n  selected: false,\n}\n","export const SQUARE = 'square'\nexport const CIRCLE = 'circle'\nexport const HEXAGON = 'hexagon'\nexport const PARALLELOGRAM = 'parallelogram'\nexport const TRIANGLE = 'triangle'\nexport const PLUS = 'plus'\nexport const STAR = 'star'\nexport const PENTAGON = 'pentagon'\nexport const HEPTAGON = 'heptagon'\nexport const OCTAGON = 'octagon'\nexport const TRAPEZOID = 'trapezoid'\nexport const DECAGON = 'decagon'\nexport const RIGHT_TRIANGLE = 'right_triangle'\nexport const CYLINDER = 'cylinder'\nexport const DIAMOND = 'diamond'\n","export const LINE = 'line'\nexport const SHAPE = 'shape'\n","import PropTypes from 'prop-types'\n\nexport default function LineVertex({id1, x1, y1, id2, x2, y2, selected}) {\n  const style = {\n    fill: 'rgb(0, 150, 253)',\n    stroke: 'rgb(255, 255, 255)',\n    strokeWidth: 1,\n  }\n\n  return (\n    <>\n      <g\n        transform={`translate(${x1}, ${y1})`}\n        data-element-root=\"true\"\n        data-prototype=\"vertices\"\n        data-id={id1}\n        data-selected={selected}\n        data-layer=\"layer-1\">\n        <circle cx=\"0\" cy=\"0\" r={7} style={style}></circle>\n      </g>\n      <g\n        transform={`translate(${x2}, ${y2})`}\n        data-element-root=\"true\"\n        data-prototype=\"vertices\"\n        data-id={id2}\n        data-selected={selected}\n        data-layer=\"layer-1\">\n        <circle cx=\"0\" cy=\"0\" r={7} style={style}></circle>\n      </g>\n    </>\n  )\n}\n\nLineVertex.defaultProps = {\n  id1: PropTypes.string.isRequired,\n  x1: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  id2: PropTypes.string.isRequired,\n  x2: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  selected: PropTypes.bool,\n}\n\nLineVertex.defaultProps = {\n  selected: true,\n}\n","import PropTypes from 'prop-types'\n\nexport default function ShapeVertex({x, y, width, height}) {\n  const radius = 7\n\n  return (\n    <g id=\"diagram_diagramAdorner\" style={{pointerEvents: 'all'}}>\n      <g id=\"diagram_SelectorElement\">\n        {false && <line stroke=\"black\" strokeWidth={1} strokeDasharray=\"2,3\" fill=\"None\" id=\"pivotLine\" x1=\"246.5\" y1=\"189.5\" x2=\"246.5\" y2=\"209.5\" opacity={1} transform=\"rotate(0 246.5 255)\" visibility=\"visible\" className=\"e-diagram-pivot-line\" />}\n        {false && <path d=\"M16.856144362449648,10.238890446662904 L18.000144362449646,3.437890446662903 L15.811144362449646,4.254890446662903 C14.837144362449646,2.5608904466629028,13.329144362449647,1.2598904466629026,11.485144362449645,0.5588904466629026 C9.375144362449646,0.24510955333709716,7.071144362449646,0.18010955333709716,5.010144362449646,0.7438904466629028 C2.942144362449646,1.6678904466629028,1.365144362449646,3.341890446662903,0.558144362449646,5.452890446662903 C0.244855637550354,7.567890446662903,0.17985563755035394,9.866890446662904,0.7431443624496461,11.930890446662904 C1.6681443624496461,13.994890446662904,3.343144362449646,15.575890446662903,5.457144362449647,16.380890446662903 C6.426144362449647,16.7518904466629,7.450144362449647,16.9348904466629,8.470144362449647,16.9348904466629 C9.815144362449647,16.9348904466629,11.155144362449647,16.6178904466629,12.367144362449647,15.986890446662901 L11.351144362449647,14.024890446662901 C9.767144362449647,14.8468904466629,7.906144362449647,14.953890446662902,6.237144362449647,14.3178904466629 C4.677144362449647,13.7218904466629,3.444144362449647,12.5558904466629,2.758144362449647,11.028890446662901 C2.078144362449646,9.501890446662903,2.031144362449646,7.802890446662903,2.622144362449646,6.243890446662903 C3.216144362449646,4.6798904466629025,4.387144362449646,3.442890446662903,5.914144362449646,2.760890446662903 C7.437144362449646,2.078890446662903,9.137144362449646,2.0298904466629026,10.700144362449645,2.6258904466629027 C11.946144362449646,3.100890446662903,12.971144362449646,3.9538904466629026,13.686144362449646,5.049890446662903 L11.540144362449645,5.850890446662903 L16.856144362449648,10.238890446662904 Z \" id=\"rotateThumb\" transform=\"rotate(0,237,171)translate(237,171)\" visibility=\"visible\" opacity={1} aria-label=\"[object Object]\" className=\"e-diagram-rotate-handle\" stroke=\"black\" strokeWidth=\"0.5\" strokeDasharray=\"none\" fill=\"#231f20\" />}\n        <rect id=\"borderRect\" x={x} y={y} width={width} height={height} visibility=\"visible\" transform=\"rotate(0,246.5,255)\" rx={0} ry={0} opacity={1} aria-label=\"\" className=\"e-diagram-border\" pointerEvents=\"none\" stroke=\"black\" strokeWidth=\"1.2\" strokeDasharray=\"6,3\" fill=\"transparent\" />\n        <circle cx={x} cy={y} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeNorthWest\" visibility=\"visible\" className=\"e-diagram-resize-handle e-northwest\" aria-label=\"Thumb to resize the selected object on top left side direction\" style={{display: 'block'}} />\n        <circle cx={x + width} cy={y} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeNorthEast\" visibility=\"visible\" className=\"e-diagram-resize-handle e-northeast\" aria-label=\"Thumb to resize the selected object on top right side direction\" style={{display: 'block'}} />\n        <circle cx={x} cy={y + height} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeSouthWest\" visibility=\"visible\" className=\"e-diagram-resize-handle e-southwest\" aria-label=\"Thumb to resize the selected object on bottom left side direction\" style={{display: 'block'}} />\n        <circle cx={x + width} cy={y+height} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeSouthEast\" visibility=\"visible\" className=\"e-diagram-resize-handle e-southeast\" aria-label=\"Thumb to resize the selected object on bottom right side direction\" style={{display: 'block'}} />\n        <circle cx={x + (width / 2)} cy={y} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeNorth\" visibility=\"visible\" className=\"e-diagram-resize-handle e-north\" aria-label=\"Thumb to resize the selected object on top side direction\" style={{display: 'block'}} />\n        <circle cx={x + (width / 2)} cy={y + height} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeSouth\" visibility=\"visible\" className=\"e-diagram-resize-handle e-south\" aria-label=\"Thumb to resize the selected object on bottom side direction\" style={{display: 'block'}} />\n        <circle cx={x} cy={y + (height / 2)} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeWest\" visibility=\"visible\" className=\"e-diagram-resize-handle e-west\" aria-label=\"Thumb to resize the selected object on left side direction\" style={{display: 'block'}} />\n        <circle cx={x + width} cy={y + (height / 2)} r={radius} stroke=\"white\" strokeWidth={1} strokeDasharray=\"none\" fill=\"#0096fd\" id=\"resizeEast\" visibility=\"visible\" className=\"e-diagram-resize-handle e-east\" aria-label=\"Thumb to resize the selected object on right side direction\" style={{display: 'block'}} />\n      </g>\n    </g>\n  )\n}\n\nShapeVertex.defaultProps = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n}\n\nShapeVertex.defaultProps = {\n  width: 100,\n  height: 100,\n}\n","import PropTypes from 'prop-types'\nimport * as types from './constants'\nimport * as Shape from './export'\n\nexport default function renderer({type, info}) {\n  switch (type) {\n    case types.LINE:\n      return <Shape.LineVertex {...info} />\n    case types.SHAPE:\n      return <Shape.ShapeVertex {...info} />\n    default:\n      return null\n  }\n}\n\nrenderer.propTypes = {\n  type: PropTypes.string.isRequired,\n  info: PropTypes.object.isRequired,\n}\n","export const MODE_IDLE = 'idle'\n\nexport const MODE_WAITING_DRAWING_LINE = 'waiting_drawing_line'\nexport const MODE_DRAWING_LINE = 'drawing_line'\nexport const MODE_DRAWING_ITEM = 'drawing_item'\n\nexport const MODE_DRAGGING_LINE = 'dragging_line'\nexport const MODE_DRAGGING_VERTEX = 'dragging_vertex'\nexport const MODE_DRAGGING_ITEM = 'dragging_item'\n","import { useState, forwardRef, useEffect } from 'react'\nimport { nanoid } from 'nanoid'\nimport PropTypes from 'prop-types'\nimport ReactSVGPanZoom from './react-svg-pan-zoom/viewer'\n\nimport { Grid as Diagram, RulerX, RulerY } from './diagram/export'\nimport { Line } from './connectors/export'\nimport BasicShape from './basic-shapes/renderer'\nimport Vertex from './vertices/renderer'\nimport * as vertexType from './vertices/constants'\nimport * as sceneMode from '../scene/constants'\n\nconst Viewer = forwardRef(({rWidth, rHeight}, ref) => {\n  const [val, setVal] = useState({a: 1, b: 0, c: 0, d: 1, e: 0, f: 0})\n  const [opacity, setOpacity] = useState(1)\n  const [mouseCoord, setMouseCoord] = useState({x: 0, y:0 })\n  const [sceneZoom, setSceneZoom] = useState(1)\n  const [rulerMarkerShow, setRulerMarkerShow] = useState(false)\n  const [mode, setMode] = useState(sceneMode.MODE_IDLE)\n  const [drawingLine, setDrawingLine] = useState({x1: 0, y1: 0, x2: 0, y2: 0})\n  const [lines, setLines] = useState([])\n  const [drawingItem, setDrawingItem] = useState(null)\n  const [items, setItems] = useState([])\n  const [itemType, setItemType] = useState('')\n  const [snap, setSnap] = useState({})\n  const [selected, setSelected] = useState(null)\n  const [tool, setTool] = useState('auto')\n  const [vertices, setVertices] = useState({})\n  const [draggingSupport, setDraggingSupport] = useState(null)\n  const enableSnap = false\n  const continuousDraw = false\n\n  const width = 5000\n  const height = 5000\n  const rulerSize = 25\n  const rulerUnitPixelSize = 100\n  const sceneWidth = val.SVGWidth || width\n  const sceneHeight = val.SVGHeight || height\n  const rulerXElements = Math.ceil( sceneWidth / rulerUnitPixelSize )\n  const rulerYElements = Math.ceil( sceneHeight / rulerUnitPixelSize ) + 1\n  const deductWidth = 350\n  const deductHeight = 0\n\n  useEffect(() => {\n    window.addEventListener('keydown', keyboardEvent)\n    return () => window.removeEventListener('keydown', keyboardEvent)\n  }, [selected])\n\n\n  const keyboardEvent = (e) => {\n    switch (e.keyCode) {\n      case 27:\n        setMode(sceneMode.MODE_IDLE)\n        setDrawingLine({x1: 0, y1: 0, x2: 0, y2: 0})\n        setDrawingItem(null)\n        setSnap({})\n        setVertices({})\n        setSelected(null)\n        break\n      case 46:\n        if (selected) {\n          switch (selected.prototype) {\n            case 'lines':\n              const index = lines.findIndex(item => item.id === selected.id)\n              lines.splice(index, 1)\n              setVertices({})\n              setSelected(null)\n              break\n            case 'items':\n              const itemIndex = items.findIndex(item => item.id === selected.id)\n              items.splice(itemIndex, 1)\n              setVertices({})\n              setSelected(null)\n              break\n            default: break\n          }\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  const onMouseMove = (e) => {\n    setMouseCoord({x: e.x, y: e.y})\n\n    switch (mode) {\n      case sceneMode.MODE_DRAWING_LINE:\n        setDrawingLine({...drawingLine, x2: e.x, y2: e.y})\n        const distance = 10\n        let info = {}\n        if (enableSnap) {\n          if (e.x < (drawingLine.x1 + distance) && e.x > (drawingLine.x1 - distance)) {\n            setSnap({dir: 'vertical', x: drawingLine.x1})\n            info = {...vertices.info, ...drawingLine, x2: drawingLine.x1, y2: drawingLine.y1}\n          } else if (e.y < (drawingLine.y1 + distance) && e.y > (drawingLine.y1 - distance)) {\n            setSnap({dir: 'horizontal', y: drawingLine.y1})\n            info = {...vertices.info, ...drawingLine, x2: mouseCoord.x, y2: mouseCoord.y}\n          } else {\n            setSnap({})\n            info = {...vertices.info, ...drawingLine, x2: drawingLine.x2, y2: drawingLine.y2}\n          }\n        } else {\n          setSnap({})\n          info = {...vertices.info, ...drawingLine, x2: drawingLine.x2, y2: drawingLine.y2}\n        }\n        setVertices({type: vertexType.LINE, info})\n        break\n      case sceneMode.MODE_DRAWING_ITEM:\n        setDrawingItem({id: nanoid(), x: mouseCoord.x, y: mouseCoord.y, type: itemType})\n        break\n      case sceneMode.MODE_DRAGGING_LINE:\n        const diffX = mouseCoord.x - draggingSupport.startPointX\n        const diffY = mouseCoord.y - draggingSupport.startPointY\n        let newVertex0X = draggingSupport.startVertex0X + diffX\n        let newVertex0Y = draggingSupport.startVertex0Y + diffY\n        let newVertex1X = draggingSupport.startVertex1X + diffX\n        let newVertex1Y = draggingSupport.startVertex1Y + diffY\n\n        const index = lines.findIndex(item => item.id === draggingSupport.lineId)\n        if (index !== -1) {\n          lines[index] = {...lines[index], selected: true,\n            x1: newVertex0X, y1: newVertex0Y, x2: newVertex1X, y2: newVertex1Y\n          }\n          setVertices({...vertices, info: {\n            ...vertices.info,\n            x1: newVertex0X, y1: newVertex0Y,\n            x2: newVertex1X, y2: newVertex1Y\n          }})\n        }\n        break\n      case sceneMode.MODE_DRAGGING_VERTEX:\n        let lineVertexPos\n        if (draggingSupport.vertexId === vertices.info.id1) {\n          setVertices({...vertices, info: {...vertices.info, x1: mouseCoord.x, y1: mouseCoord.y}})\n          lineVertexPos = 1\n        }\n        if (draggingSupport.vertexId === vertices.info.id2) {\n          setVertices({...vertices, info: {...vertices.info, x2: mouseCoord.x, y2: mouseCoord.y}})\n          lineVertexPos = 2\n        }\n        switch (draggingSupport.prototype) {\n          case 'lines':\n            const lineIndex = lines.findIndex(line => line.id === vertices.target.id)\n            let clonedLines = [...lines]\n            if (lineVertexPos === 1) {\n              clonedLines[lineIndex] = {...clonedLines[lineIndex], x1: mouseCoord.x, y1: mouseCoord.y}\n            } else if (lineVertexPos === 2) {\n              clonedLines[lineIndex] = {...clonedLines[lineIndex], x2: mouseCoord.x, y2: mouseCoord.y}\n            }\n            setLines(clonedLines)\n            break\n          default: break\n        }\n        break\n      case sceneMode.MODE_DRAGGING_ITEM:\n        const item = items.find(item => item.id === draggingSupport.id)\n        item.x = e.x\n        item.y = e.y\n        setVertices({})\n        break\n      default:\n        break\n    }\n  }\n\n  const onChangeValue = (value) => {\n    if ((value.a * 100) <= 1000 && (value.a > 0.25)) {\n      setVal(formatValue(value))\n      setSceneZoom(value.a)\n    }\n  }\n\n  const formatValue = (value) => {\n    const zeroLeftPosition = width * sceneZoom || 0\n    const zeroTopPosition = height * sceneZoom || 0\n    const limitWidth = -Math.abs(zeroLeftPosition - value.viewerWidth)\n    const limitHeight = -Math.abs(zeroTopPosition - value.viewerHeight)\n    let newE = value.e\n    let newF = value.f\n    if (value.e > 0) {\n      newE = 0\n    } else if (limitWidth > value.e) {\n      newE = limitWidth\n    }\n\n    if (value.f > 0) {\n      newF = 0\n    } else if (limitHeight > value.f) {\n      newF = limitHeight\n    }\n    return {...value, e: newE, f: newF}\n  }\n\n  const onMouseDown = (e) => {\n    setRulerMarkerShow(false)\n    switch (mode) {\n      case sceneMode.MODE_WAITING_DRAWING_LINE:\n        const {x, y} = mouseCoord\n        setDrawingLine({x1: x, y1: y, x2: x, y2: y})\n        setVertices({type: vertexType.LINE, info: {\n          id1: nanoid(), x1: x, y1: y,\n          id2: nanoid(), x2: x, y2: y,\n        }})\n        setMode(sceneMode.MODE_DRAWING_LINE)\n        break\n      case sceneMode.MODE_DRAWING_LINE:\n        if (!continuousDraw) {\n          const lineId = nanoid()\n          setLines([...lines, { id: lineId, selected: false,\n            x1: drawingLine.x1, y1: drawingLine.y1,\n            x2: mouseCoord.x, y2: mouseCoord.y,\n          }])\n          setVertices({})\n          setMode(sceneMode.MODE_WAITING_DRAWING_LINE)\n        }\n        break\n      case sceneMode.MODE_DRAWING_ITEM:\n        const itemId = nanoid()\n        setItems([...items, {id: itemId,\n          x: mouseCoord.x, y: mouseCoord.y,\n          width: 100, height: 100,\n          type: itemType, selected: false,\n        }])\n        break\n      case sceneMode.MODE_IDLE:\n        const event = e.originalEvent\n        const elementData = extractElementData(event.target)\n        if (!elementData || !elementData.selected) return\n        setTool('none')\n        switch (elementData.prototype) {\n          case 'lines':\n            const line = lines.find(item => item.id === elementData.id)\n            if (line) {\n              setDraggingSupport({lineId: line.id,\n                startPointX: mouseCoord.x, startPointY: mouseCoord.y,\n                startVertex0X: line.x1, startVertex0Y: line.y1,\n                startVertex1X: line.x2, startVertex1Y: line.y2,\n              })\n              setMode(sceneMode.MODE_DRAGGING_LINE)\n            }\n            break\n          case 'vertices':\n            setDraggingSupport({\n              vertexId: elementData.id,\n              prototype: 'lines',\n            })\n            setMode(sceneMode.MODE_DRAGGING_VERTEX)\n            break\n          case 'items':\n            setDraggingSupport({\n              id: elementData.id,\n              prototype: 'items',\n            })\n            setMode(sceneMode.MODE_DRAGGING_ITEM)\n            break\n          default: break\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  const onMouseUp = (e) => {\n    setRulerMarkerShow(true)\n    switch (mode) {\n      case sceneMode.MODE_DRAWING_LINE:\n        const lineId = nanoid()\n        setLines([...lines, {\n          id: lineId, selected: false,\n          x1: drawingLine.x1, y1: drawingLine.y1,\n          x2: mouseCoord.x, y2: mouseCoord.y,\n        }])\n        setVertices({\n          type: vertexType.LINE, info: {\n            id1: vertices.info.id1, x1: mouseCoord.x, y1: mouseCoord.y,\n            id2: vertices.info.id2, x2: drawingLine.x1, y2: drawingLine.y1,\n          },\n          target: { id: lineId, type: 'lines' },\n        })\n\n        let x2 = mouseCoord.x\n        let y2 = mouseCoord.y\n\n        if (enableSnap) {\n          const distance = 10\n          if (x2 < (drawingLine.x1 + distance) && x2 > (drawingLine.x1 - distance)) {\n            x2 = drawingLine.x1\n          }\n          if (y2 < (drawingLine.y1 + distance) && y2 > (drawingLine.y1 - distance)) {\n            y2 = drawingLine.y1\n          }\n        }\n        setDrawingLine({x1: x2, y1: y2, x2: x2, y2: y2})\n        break\n      case sceneMode.MODE_IDLE:\n        const event = e.originalEvent\n        const elementData = extractElementData(event.target)\n        switch (elementData ? elementData.prototype : 'none') {\n          case 'lines':\n            const line = lines.find(item => item.id === elementData.id)\n            if (line) {\n              if (selected && selected.id === line.id) {\n                setSelected(null)\n                setVertices({})\n              } else {\n                setSelected({\n                  id: line.id,\n                  prototype: 'lines',\n                })\n                setVertices({type: vertexType.LINE, info: {\n                  id1: nanoid(), x1: line.x1, y1: line.y1,\n                  id2: nanoid(), x2: line.x2, y2: line.y2},\n                  target: {id: line.id, type: 'lines'}\n                })\n              }\n            }\n            break\n          case 'items':\n            const item = items.find(item => item.id === elementData.id)\n            if (item) {\n              const {x, y, width, height} = item\n              setSelected({\n                id: item.id,\n                prototype: 'items',\n              })\n              setVertices({type: vertexType.SHAPE, info: {\n                x: x - (width / 2),\n                y: y - (height / 2),\n                width, height,\n              }})\n            }\n            break\n          case 'none':\n            setSelected(null)\n            setVertices({})\n            setTool('auto')\n            setDraggingSupport(null)\n            break\n          default: break\n        }\n        break\n      case sceneMode.MODE_DRAGGING_LINE:\n        setMode(sceneMode.MODE_IDLE)\n        setSelected(null)\n        setVertices({})\n        setTool('auto')\n        break\n      case sceneMode.MODE_DRAGGING_VERTEX:\n        setMode(sceneMode.MODE_IDLE)\n        setSelected(null)\n        setVertices({})\n        setDraggingSupport(null)\n        setTool('auto')\n        break\n      case sceneMode.MODE_DRAGGING_ITEM:\n        setMode(sceneMode.MODE_IDLE)\n        setSelected(null)\n        setVertices({})\n        setTool('auto')\n        break\n      default: break\n    }\n  }\n\n  //console.log(mode)\n\n  const computedWidth = ((rWidth || 1) - deductWidth) - rulerSize\n  const computedHeight = ((rHeight || 1) - deductHeight) - rulerSize\n\n  return (\n    <>\n      <div ref={ref} style={{display: 'flex', flexFlow: 'row nowrap', height: '100vh'}}>\n        <div style={{\n          margin: 0,\n          padding: 0,\n          display: 'grid',\n          gridRowGap: '0',\n          gridColumnGap: '0',\n          gridTemplateColumns: `${rulerSize}px ${((rWidth || 1) - deductWidth) - rulerSize}px`,\n          gridTemplateRows: `${rulerSize}px ${((rHeight || 1) - deductHeight) - rulerSize}px`,\n          position: 'relative'\n        }}>\n          <div style={{ gridColumn: 1, gridRow: 1, backgroundColor: '#f5f5f5' }}></div>\n          <div style={{ gridRow: 1, gridColumn: 2, position: 'relative', overflow: 'hidden' }} id=\"rulerX\">\n            {sceneWidth && <RulerX\n              unitPixelSize={rulerUnitPixelSize}\n              positiveUnitsNumber={rulerXElements}\n              zoom={sceneZoom}\n              mouseX={mouseCoord.x}\n              width={computedWidth}\n              valueE={val.e}\n              marker={rulerMarkerShow}/>}\n          </div>\n          <div style={{ gridColumn: 1, gridRow: 2, position: 'relative', overflow: 'hidden' }} id=\"rulerY\">\n            {sceneHeight && <RulerY\n              unitPixelSize={rulerUnitPixelSize}\n              positiveUnitsNumber={rulerYElements}\n              zoom={sceneZoom}\n              mouseY={mouseCoord.y}\n              height={computedHeight}\n              zeroTopPosition={height * sceneZoom}\n              valueF={val.f}\n              marker={rulerMarkerShow}/>}\n          </div>\n          <div style={{position: 'relative', width: computedWidth, height: computedHeight, gridColumn: 2, gridRow: 2}}>\n            <ReactSVGPanZoom\n              style={{ gridColumn: 2, gridRow: 2 }}\n              width={((rWidth || 1) - deductWidth) - rulerSize}\n              background=\"#fff\"\n              height={((rHeight || 1) - deductHeight) - rulerSize}\n              value={val}\n              onChangeValue={onChangeValue}\n              tool={tool}\n              detectAutoPan={false}\n              disableDoubleClickZoomWithToolAuto={true}\n              onChangeTool={tool => {}}\n              onMouseMove={onMouseMove}\n              onMouseDown={onMouseDown}\n              onMouseUp={onMouseUp}\n              onMouseEnter={() => setRulerMarkerShow(true)}\n              onMouseLeave={() => setRulerMarkerShow(false)}\n              miniatureProps={{position: 'none'}}\n              toolbarProps={{position: 'none'}}\n              grid={<Diagram width={width} height={height} opacity={opacity} zoom={sceneZoom} unitPixelSize={rulerUnitPixelSize} />}>\n              <svg width={width} height={height}>\n                {/* objects here */}\n                {lines.map((item, index) => <Line key={index} {...item} selected={selected && 'lines' === selected.prototype && item.id === selected.id} />)}\n                {drawingLine && <Line {...drawingLine} id={nanoid()} selected={sceneMode.MODE_DRAWING_LINE === mode} />}\n\n                {items.map((item, index) => <BasicShape key={index} {...item} selected={selected && 'items' === selected.prototype && item.id === selected.id} />)}\n                {false && drawingItem && <BasicShape {...drawingItem} />}\n                {vertices && <Vertex {...vertices} />}\n                {(!!snap && 'horizontal' === snap.dir) && <line data-snap=\"true\" x1=\"0\" y1={snap.y} x2={width} y2={snap.y} style={{stroke: 'rgb(211, 47, 47)', strokeWidth: 1}}></line>}\n                {(!!snap && 'vertical' === snap.dir) && <line data-snap=\"true\" x1={snap.x} y1=\"0\" x2={snap.x} y2={height} style={{stroke: 'rgb(211, 47, 47)', strokeWidth: 1}}></line>}\n              </svg>\n            </ReactSVGPanZoom>\n          </div>\n        </div>\n\n        <div style={{padding:10}}>\n          <button style={{margin:5}} onClick={() => setOpacity(opacity ? 0 : 1)}>hide/show grid</button>\n          <button style={{margin:5}} onClick={() => setMode(sceneMode.MODE_IDLE)}>mode idle</button>\n          <button style={{margin:5}} onClick={() => setMode(sceneMode.MODE_WAITING_DRAWING_LINE)}>draw line</button>\n\n          {/* shape selection */}\n          <select id=\"select-basic_shape\" name=\"select-basic_shape\" onChange={e => {\n            setMode(sceneMode.MODE_DRAWING_ITEM)\n            setItemType(e.target.value)\n          }}>\n            <option value=\"\">--Select--</option>\n            <option value=\"square\">Square</option>\n            <option value=\"circle\">Circle</option>\n            <option value=\"hexagon\">Hexagon</option>\n            <option value=\"parallelogram\">Parallelogram</option>\n            <option value=\"triangle\">Triangle</option>\n            <option value=\"plus\">Plus</option>\n            <option value=\"star\">Star</option>\n            <option value=\"pentagon\">Pentagon</option>\n            <option value=\"heptagon\">Heptagon</option>\n            <option value=\"octagon\">Octagon</option>\n            <option value=\"trapezoid\">Trapezoid</option>\n            <option value=\"decagon\">Decagon</option>\n            <option value=\"right_triangle\">Right Triangle</option>\n            <option value=\"cylinder\">Cylinder</option>\n            <option value=\"diamond\">Diamond</option>\n          </select>\n\n          <div style={{marginTop:5}}>\n            <span>x: </span><input type=\"text\" value={mouseCoord.x} />\n            <span>y: </span><input type=\"text\" value={mouseCoord.y} />\n            <small>{mode}</small>\n            <br />\n\n            <small>id1: {vertices?.info?.id1}</small>\n            <br />\n            <small>id2: {vertices?.info?.id2}</small>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n})\n\nfunction extractElementData(node) {\n  while (!node.attributes.getNamedItem('data-element-root') && node.tagName !== 'svg') {\n    node = node.parentNode\n  }\n  if (node.tagName === 'svg') return null\n\n  return {\n    id: node.attributes.getNamedItem('data-id')?.value,\n    prototype: node.attributes.getNamedItem('data-prototype')?.value,\n    selected: node.attributes.getNamedItem('data-selected')?.value === 'true',\n  }\n}\n\nViewer.propTypes = {\n  rWidth: PropTypes.number.isRequired,\n  rHeight: PropTypes.number.isRequired,\n}\n\nexport default Viewer\n","import Viewer from './components/viewer'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\nexport default function App() {\n  return (\n    <AutoSizer>\n      {({ width, height }) => <Viewer rWidth={width} rHeight={height} />}\n    </AutoSizer>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}